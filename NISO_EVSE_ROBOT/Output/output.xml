<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.2 on win32)" generated="20240808 15:01:05.577" rpa="false" schemaversion="3">
<suite id="s1" name="Charging Sequence No Cloud Both Ports" source="C:\Users\labbet\Documents\NISO-ROBOT-TEST-main\NISO-ROBOT-TEST-main\NISO_EVSE_ROBOT\Tests\Charging Tests\Charging_Sequence_No_Cloud_Both_Ports.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Open Serial Port</arg>
<arg>${port}</arg>
<arg>AND</arg>
<arg>Set Mac Variable</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Serial Port">
<arg>${port}</arg>
<doc>Opens up a serial COM-port and is able to pass it between test to avoid reboot of device.</doc>
<kw name="Open Serial" library="main">
<var>${ser}</var>
<arg>${port}</arg>
<msg timestamp="20240808 15:01:06.214" level="INFO">${ser} = Serial&lt;id=0x1bd7f9f2680, open=True&gt;(port='COM15', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=2, xonxoff=False, rtscts=False, dsrdtr=False)</msg>
<status status="PASS" starttime="20240808 15:01:06.196" endtime="20240808 15:01:06.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${ser}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240808 15:01:06.214" level="INFO">${ser} = Serial&lt;id=0x1bd7f9f2680, open=True&gt;(port='COM15', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=2, xonxoff=False, rtscts=False, dsrdtr=False)</msg>
<status status="PASS" starttime="20240808 15:01:06.214" endtime="20240808 15:01:06.214"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:08.216" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:06.215" endtime="20240808 15:01:08.216"/>
</kw>
<status status="PASS" starttime="20240808 15:01:06.194" endtime="20240808 15:01:08.216"/>
</kw>
<kw name="Set Mac Variable">
<kw name="Get MAC-Address From Config File" library="Config_Loader">
<var>${MAC}</var>
<kw name="Read Config" library="main">
<var>${data}</var>
<arg>${mac}</arg>
<msg timestamp="20240808 15:01:08.217" level="INFO">${data} = [['I (01:00:01.938) OCPP: MAC 348518A1DC84']]</msg>
<status status="PASS" starttime="20240808 15:01:08.216" endtime="20240808 15:01:08.217"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${line}</var>
<arg>${data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.217" level="INFO">${line} = [['I (01:00:01.938) OCPP: MAC 348518A1DC84']]</msg>
<status status="PASS" starttime="20240808 15:01:08.217" endtime="20240808 15:01:08.217"/>
</kw>
<kw name="Get Substring" library="String">
<var>${MAC}</var>
<arg>${line}</arg>
<arg>-15</arg>
<arg>-3</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240808 15:01:08.217" level="INFO">${MAC} = 348518A1DC84</msg>
<status status="PASS" starttime="20240808 15:01:08.217" endtime="20240808 15:01:08.217"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${MAC}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:08.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:08.217" endtime="20240808 15:01:08.218"/>
</kw>
<msg timestamp="20240808 15:01:08.218" level="INFO">${MAC} = 348518A1DC84</msg>
<status status="PASS" starttime="20240808 15:01:08.216" endtime="20240808 15:01:08.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${MAC_GLOBAL}</arg>
<arg>${MAC}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240808 15:01:08.218" level="INFO">${MAC_GLOBAL} = 348518A1DC84</msg>
<status status="PASS" starttime="20240808 15:01:08.218" endtime="20240808 15:01:08.218"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.216" endtime="20240808 15:01:08.218"/>
</kw>
<status status="PASS" starttime="20240808 15:01:06.194" endtime="20240808 15:01:08.218"/>
</kw>
<test id="s1-t1" name="Set Suite Documentation" line="34">
<kw name="Run Keyword" library="BuiltIn">
<var>${MAC}</var>
<arg>Get MAC-Address From Config File</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get MAC-Address From Config File" library="Config_Loader">
<kw name="Read Config" library="main">
<var>${data}</var>
<arg>${mac}</arg>
<msg timestamp="20240808 15:01:08.221" level="INFO">${data} = [['I (01:00:01.938) OCPP: MAC 348518A1DC84']]</msg>
<status status="PASS" starttime="20240808 15:01:08.219" endtime="20240808 15:01:08.221"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${line}</var>
<arg>${data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.221" level="INFO">${line} = [['I (01:00:01.938) OCPP: MAC 348518A1DC84']]</msg>
<status status="PASS" starttime="20240808 15:01:08.221" endtime="20240808 15:01:08.221"/>
</kw>
<kw name="Get Substring" library="String">
<var>${MAC}</var>
<arg>${line}</arg>
<arg>-15</arg>
<arg>-3</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240808 15:01:08.221" level="INFO">${MAC} = 348518A1DC84</msg>
<status status="PASS" starttime="20240808 15:01:08.221" endtime="20240808 15:01:08.221"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${MAC}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:08.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:08.221" endtime="20240808 15:01:08.223"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.219" endtime="20240808 15:01:08.223"/>
</kw>
<msg timestamp="20240808 15:01:08.223" level="INFO">${MAC} = 348518A1DC84</msg>
<status status="PASS" starttime="20240808 15:01:08.219" endtime="20240808 15:01:08.223"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${SW}</var>
<arg>Get Software Version From Config File</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get Software Version From Config File" library="Config_Loader">
<kw name="Get Lines Matching Pattern In CSV" library="Config_Loader">
<var>${lines}</var>
<arg>${file_path}</arg>
<arg>SW name:</arg>
<kw name="Create List" library="BuiltIn">
<var>${lines}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20240808 15:01:08.225" level="INFO">${lines} = []</msg>
<status status="PASS" starttime="20240808 15:01:08.225" endtime="20240808 15:01:08.225"/>
</kw>
<kw name="Read Csv File To List" library="CSVLibrary">
<var>${csv_data}</var>
<arg>${file_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<msg timestamp="20240808 15:01:08.226" level="INFO">${csv_data} = [['ESP-ROM:esp32s3-20210327'], ['Build:Mar 27 2021'], ['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)'], ['SPIWP:0xee'], ['Octal Flash Mode Enabled'], ['For OPI Flash', ' Use Default Flash Boot...</msg>
<status status="PASS" starttime="20240808 15:01:08.225" endtime="20240808 15:01:08.226"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${leng}</var>
<arg>${csv_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240808 15:01:08.226" level="INFO">Length is 92</msg>
<msg timestamp="20240808 15:01:08.226" level="INFO">${leng} = 92</msg>
<status status="PASS" starttime="20240808 15:01:08.226" endtime="20240808 15:01:08.226"/>
</kw>
<for flavor="IN">
<var>${line}</var>
<value>@{csv_data}</value>
<iter>
<var name="${line}">['ESP-ROM:esp32s3-20210327']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.227" level="INFO">line: ['ESP-ROM:esp32s3-20210327']</msg>
<status status="PASS" starttime="20240808 15:01:08.226" endtime="20240808 15:01:08.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.227" level="INFO">${string} = ['ESP-ROM:esp32s3-20210327']</msg>
<status status="PASS" starttime="20240808 15:01:08.227" endtime="20240808 15:01:08.227"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.227" level="FAIL">'['ESP-ROM:esp32s3-20210327']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.227" endtime="20240808 15:01:08.227"/>
</kw>
<msg timestamp="20240808 15:01:08.227" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.227" endtime="20240808 15:01:08.227"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.227" endtime="20240808 15:01:08.228"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.226" endtime="20240808 15:01:08.228"/>
</iter>
<iter>
<var name="${line}">['Build:Mar 27 2021']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.228" level="INFO">line: ['Build:Mar 27 2021']</msg>
<status status="PASS" starttime="20240808 15:01:08.228" endtime="20240808 15:01:08.228"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.228" level="INFO">${string} = ['Build:Mar 27 2021']</msg>
<status status="PASS" starttime="20240808 15:01:08.228" endtime="20240808 15:01:08.228"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.229" level="FAIL">'['Build:Mar 27 2021']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.228" endtime="20240808 15:01:08.229"/>
</kw>
<msg timestamp="20240808 15:01:08.229" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.228" endtime="20240808 15:01:08.229"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.229" endtime="20240808 15:01:08.229"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.228" endtime="20240808 15:01:08.229"/>
</iter>
<iter>
<var name="${line}">['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.229" level="INFO">line: ['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']</msg>
<status status="PASS" starttime="20240808 15:01:08.229" endtime="20240808 15:01:08.229"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.230" level="INFO">${string} = ['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']</msg>
<status status="PASS" starttime="20240808 15:01:08.229" endtime="20240808 15:01:08.230"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.230" level="FAIL">'['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.230" endtime="20240808 15:01:08.230"/>
</kw>
<msg timestamp="20240808 15:01:08.230" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.230" endtime="20240808 15:01:08.230"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.230" endtime="20240808 15:01:08.231"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.229" endtime="20240808 15:01:08.231"/>
</iter>
<iter>
<var name="${line}">['SPIWP:0xee']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.231" level="INFO">line: ['SPIWP:0xee']</msg>
<status status="PASS" starttime="20240808 15:01:08.231" endtime="20240808 15:01:08.231"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.231" level="INFO">${string} = ['SPIWP:0xee']</msg>
<status status="PASS" starttime="20240808 15:01:08.231" endtime="20240808 15:01:08.231"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.232" level="FAIL">'['SPIWP:0xee']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.231" endtime="20240808 15:01:08.232"/>
</kw>
<msg timestamp="20240808 15:01:08.232" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.231" endtime="20240808 15:01:08.232"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.232" endtime="20240808 15:01:08.232"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.231" endtime="20240808 15:01:08.232"/>
</iter>
<iter>
<var name="${line}">['Octal Flash Mode Enabled']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.233" level="INFO">line: ['Octal Flash Mode Enabled']</msg>
<status status="PASS" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.233"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.233" level="INFO">${string} = ['Octal Flash Mode Enabled']</msg>
<status status="PASS" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.233"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.233" level="FAIL">'['Octal Flash Mode Enabled']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.233"/>
</kw>
<msg timestamp="20240808 15:01:08.233" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.233"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.233"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.232" endtime="20240808 15:01:08.233"/>
</iter>
<iter>
<var name="${line}">['For OPI Flash', ' Use Default Flash Boot Mode']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.233" level="INFO">line: ['For OPI Flash', ' Use Default Flash Boot Mode']</msg>
<status status="PASS" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.233"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.234" level="INFO">${string} = ['For OPI Flash', ' Use Default Flash Boot Mode']</msg>
<status status="PASS" starttime="20240808 15:01:08.234" endtime="20240808 15:01:08.234"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.234" level="FAIL">'['For OPI Flash', ' Use Default Flash Boot Mode']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.234" endtime="20240808 15:01:08.234"/>
</kw>
<msg timestamp="20240808 15:01:08.234" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.234" endtime="20240808 15:01:08.234"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.234" endtime="20240808 15:01:08.234"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.233" endtime="20240808 15:01:08.234"/>
</iter>
<iter>
<var name="${line}">['mode:SLOW_RD', ' clock div:1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.235" level="INFO">line: ['mode:SLOW_RD', ' clock div:1']</msg>
<status status="PASS" starttime="20240808 15:01:08.234" endtime="20240808 15:01:08.235"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.235" level="INFO">${string} = ['mode:SLOW_RD', ' clock div:1']</msg>
<status status="PASS" starttime="20240808 15:01:08.235" endtime="20240808 15:01:08.235"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.235" level="FAIL">'['mode:SLOW_RD', ' clock div:1']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.235" endtime="20240808 15:01:08.235"/>
</kw>
<msg timestamp="20240808 15:01:08.235" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.235" endtime="20240808 15:01:08.235"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.235" endtime="20240808 15:01:08.235"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.234" endtime="20240808 15:01:08.235"/>
</iter>
<iter>
<var name="${line}">['load:0x3fce2810', 'len:0x13b4']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.236" level="INFO">line: ['load:0x3fce2810', 'len:0x13b4']</msg>
<status status="PASS" starttime="20240808 15:01:08.236" endtime="20240808 15:01:08.236"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.236" level="INFO">${string} = ['load:0x3fce2810', 'len:0x13b4']</msg>
<status status="PASS" starttime="20240808 15:01:08.236" endtime="20240808 15:01:08.236"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.236" level="FAIL">'['load:0x3fce2810', 'len:0x13b4']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.236" endtime="20240808 15:01:08.236"/>
</kw>
<msg timestamp="20240808 15:01:08.237" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.236" endtime="20240808 15:01:08.237"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.237" endtime="20240808 15:01:08.237"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.235" endtime="20240808 15:01:08.237"/>
</iter>
<iter>
<var name="${line}">['load:0x403c8700', 'len:0x4']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.237" level="INFO">line: ['load:0x403c8700', 'len:0x4']</msg>
<status status="PASS" starttime="20240808 15:01:08.237" endtime="20240808 15:01:08.237"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.237" level="INFO">${string} = ['load:0x403c8700', 'len:0x4']</msg>
<status status="PASS" starttime="20240808 15:01:08.237" endtime="20240808 15:01:08.237"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.238" level="FAIL">'['load:0x403c8700', 'len:0x4']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.238" endtime="20240808 15:01:08.238"/>
</kw>
<msg timestamp="20240808 15:01:08.238" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.237" endtime="20240808 15:01:08.238"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.238" endtime="20240808 15:01:08.238"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.237" endtime="20240808 15:01:08.238"/>
</iter>
<iter>
<var name="${line}">['load:0x403c8704', 'len:0xce0']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.239" level="INFO">line: ['load:0x403c8704', 'len:0xce0']</msg>
<status status="PASS" starttime="20240808 15:01:08.239" endtime="20240808 15:01:08.239"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.239" level="INFO">${string} = ['load:0x403c8704', 'len:0xce0']</msg>
<status status="PASS" starttime="20240808 15:01:08.239" endtime="20240808 15:01:08.239"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.239" level="FAIL">'['load:0x403c8704', 'len:0xce0']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.239" endtime="20240808 15:01:08.239"/>
</kw>
<msg timestamp="20240808 15:01:08.239" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.239" endtime="20240808 15:01:08.239"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.239" endtime="20240808 15:01:08.240"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.238" endtime="20240808 15:01:08.240"/>
</iter>
<iter>
<var name="${line}">['load:0x403cb700', 'len:0x33d4']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.240" level="INFO">line: ['load:0x403cb700', 'len:0x33d4']</msg>
<status status="PASS" starttime="20240808 15:01:08.240" endtime="20240808 15:01:08.240"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.240" level="INFO">${string} = ['load:0x403cb700', 'len:0x33d4']</msg>
<status status="PASS" starttime="20240808 15:01:08.240" endtime="20240808 15:01:08.240"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.240" level="FAIL">'['load:0x403cb700', 'len:0x33d4']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.240" endtime="20240808 15:01:08.240"/>
</kw>
<msg timestamp="20240808 15:01:08.240" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.240" endtime="20240808 15:01:08.240"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.240" endtime="20240808 15:01:08.241"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.240" endtime="20240808 15:01:08.241"/>
</iter>
<iter>
<var name="${line}">['entry 0x403c8968']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.241" level="INFO">line: ['entry 0x403c8968']</msg>
<status status="PASS" starttime="20240808 15:01:08.241" endtime="20240808 15:01:08.241"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.241" level="INFO">${string} = ['entry 0x403c8968']</msg>
<status status="PASS" starttime="20240808 15:01:08.241" endtime="20240808 15:01:08.241"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.241" level="FAIL">'['entry 0x403c8968']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.241" endtime="20240808 15:01:08.241"/>
</kw>
<msg timestamp="20240808 15:01:08.242" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.241" endtime="20240808 15:01:08.242"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.242" endtime="20240808 15:01:08.242"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.241" endtime="20240808 15:01:08.242"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.162) MAIN: Start APP NISO EV!']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.242" level="INFO">line: ['I (00:00:00.162) MAIN: Start APP NISO EV!']</msg>
<status status="PASS" starttime="20240808 15:01:08.242" endtime="20240808 15:01:08.242"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.242" level="INFO">${string} = ['I (00:00:00.162) MAIN: Start APP NISO EV!']</msg>
<status status="PASS" starttime="20240808 15:01:08.242" endtime="20240808 15:01:08.242"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.243" level="FAIL">'['I (00:00:00.162) MAIN: Start APP NISO EV!']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.243" endtime="20240808 15:01:08.243"/>
</kw>
<msg timestamp="20240808 15:01:08.243" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.242" endtime="20240808 15:01:08.243"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.243" endtime="20240808 15:01:08.244"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.242" endtime="20240808 15:01:08.244"/>
</iter>
<iter>
<var name="${line}">[]</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.244" level="INFO">line: []</msg>
<status status="PASS" starttime="20240808 15:01:08.244" endtime="20240808 15:01:08.244"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.244" level="INFO">${string} = []</msg>
<status status="PASS" starttime="20240808 15:01:08.244" endtime="20240808 15:01:08.244"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.244" level="FAIL">'[]' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.244" endtime="20240808 15:01:08.245"/>
</kw>
<msg timestamp="20240808 15:01:08.245" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.244" endtime="20240808 15:01:08.245"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.245" endtime="20240808 15:01:08.245"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.244" endtime="20240808 15:01:08.245"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.245" level="INFO">line: ['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:08.245" endtime="20240808 15:01:08.245"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.245" level="INFO">${string} = ['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:08.245" endtime="20240808 15:01:08.245"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.246" level="FAIL">'['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.245" endtime="20240808 15:01:08.246"/>
</kw>
<msg timestamp="20240808 15:01:08.246" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.245" endtime="20240808 15:01:08.246"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.246" endtime="20240808 15:01:08.246"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.245" endtime="20240808 15:01:08.246"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.246" level="INFO">line: ['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:08.246" endtime="20240808 15:01:08.246"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.246" level="INFO">${string} = ['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:08.246" endtime="20240808 15:01:08.246"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.247" level="FAIL">'['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.246" endtime="20240808 15:01:08.247"/>
</kw>
<msg timestamp="20240808 15:01:08.247" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.246" endtime="20240808 15:01:08.247"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.247" endtime="20240808 15:01:08.247"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.246" endtime="20240808 15:01:08.247"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.168) MAIN: 32MB external flash']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.247" level="INFO">line: ['I (00:00:00.168) MAIN: 32MB external flash']</msg>
<status status="PASS" starttime="20240808 15:01:08.247" endtime="20240808 15:01:08.247"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.247" level="INFO">${string} = ['I (00:00:00.168) MAIN: 32MB external flash']</msg>
<status status="PASS" starttime="20240808 15:01:08.247" endtime="20240808 15:01:08.247"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.248" level="FAIL">'['I (00:00:00.168) MAIN: 32MB external flash']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.248" endtime="20240808 15:01:08.248"/>
</kw>
<msg timestamp="20240808 15:01:08.248" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.248" endtime="20240808 15:01:08.248"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.248" endtime="20240808 15:01:08.248"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.247" endtime="20240808 15:01:08.248"/>
</iter>
<iter>
<var name="${line}">[]</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.249" level="INFO">line: []</msg>
<status status="PASS" starttime="20240808 15:01:08.248" endtime="20240808 15:01:08.249"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.249" level="INFO">${string} = []</msg>
<status status="PASS" starttime="20240808 15:01:08.249" endtime="20240808 15:01:08.249"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.249" level="FAIL">'[]' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.249" endtime="20240808 15:01:08.249"/>
</kw>
<msg timestamp="20240808 15:01:08.249" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.249" endtime="20240808 15:01:08.249"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.249" endtime="20240808 15:01:08.250"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.248" endtime="20240808 15:01:08.250"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.250" level="INFO">line: ['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:08.250" endtime="20240808 15:01:08.250"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.250" level="INFO">${string} = ['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:08.250" endtime="20240808 15:01:08.250"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.251" level="FAIL">'['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.251" endtime="20240808 15:01:08.251"/>
</kw>
<msg timestamp="20240808 15:01:08.251" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.250" endtime="20240808 15:01:08.251"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.251" endtime="20240808 15:01:08.251"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.250" endtime="20240808 15:01:08.251"/>
</iter>
<iter>
<var name="${line}">[]</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.251" level="INFO">line: []</msg>
<status status="PASS" starttime="20240808 15:01:08.251" endtime="20240808 15:01:08.251"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.252" level="INFO">${string} = []</msg>
<status status="PASS" starttime="20240808 15:01:08.251" endtime="20240808 15:01:08.252"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.252" level="FAIL">'[]' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.252" endtime="20240808 15:01:08.252"/>
</kw>
<msg timestamp="20240808 15:01:08.252" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.252" endtime="20240808 15:01:08.252"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.252" endtime="20240808 15:01:08.252"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.251" endtime="20240808 15:01:08.252"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.252" level="INFO">line: ['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:08.252" endtime="20240808 15:01:08.252"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.253" level="INFO">${string} = ['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.253"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.253" level="FAIL">'['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.253"/>
</kw>
<msg timestamp="20240808 15:01:08.253" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.253"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.253"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.252" endtime="20240808 15:01:08.253"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.253" level="INFO">line: ['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']</msg>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.253"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.253" level="INFO">${string} = ['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']</msg>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.253"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:08.255" level="FAIL">'['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']' does not match 'SW name:'</msg>
<status status="FAIL" starttime="20240808 15:01:08.254" endtime="20240808 15:01:08.255"/>
</kw>
<msg timestamp="20240808 15:01:08.255" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.255"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.253" endtime="20240808 15:01:08.255"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:08.255" level="INFO">line: ['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</msg>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.255" level="INFO">${string} = ['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</msg>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</kw>
<msg timestamp="20240808 15:01:08.255" level="INFO">${match} = True</msg>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20240808 15:01:08.255" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.255" endtime="20240808 15:01:08.255"/>
</iter>
<status status="PASS" starttime="20240808 15:01:08.226" endtime="20240808 15:01:08.255"/>
</for>
<msg timestamp="20240808 15:01:08.257" level="INFO">${lines} = ['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</msg>
<status status="PASS" starttime="20240808 15:01:08.225" endtime="20240808 15:01:08.257"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${line}</var>
<arg>${lines}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:08.257" level="INFO">${line} = ['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</msg>
<status status="PASS" starttime="20240808 15:01:08.257" endtime="20240808 15:01:08.257"/>
</kw>
<kw name="Get Substring" library="String">
<var>${sw_Value}</var>
<arg>${line}</arg>
<arg>-12</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240808 15:01:08.257" level="INFO">${sw_Value} = NISO_v0.15</msg>
<status status="PASS" starttime="20240808 15:01:08.257" endtime="20240808 15:01:08.257"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.224" endtime="20240808 15:01:08.257"/>
</kw>
<msg timestamp="20240808 15:01:08.257" level="INFO">${SW} = NISO_v0.15</msg>
<status status="PASS" starttime="20240808 15:01:08.223" endtime="20240808 15:01:08.257"/>
</kw>
<kw name="Set Suite Documentation" library="BuiltIn">
<arg>Tests full charging cycle on connector 2 from cable plugin to charging state. LED functionality, CP/PP values, states and voltage throughput are verified.\n\nMAC-Address: ${MAC} \n\nSoftware Version: ${SW}</arg>
<doc>Sets documentation for the current test suite.</doc>
<msg timestamp="20240808 15:01:08.258" level="INFO">Set suite documentation to:
Tests full charging cycle on connector 2 from cable plugin to charging state. LED functionality, CP/PP values, states and voltage throughput are verified.

MAC-Address: 348518A1DC84 

Software Version: NISO_v0.15</msg>
<status status="PASS" starttime="20240808 15:01:08.258" endtime="20240808 15:01:08.259"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.218" endtime="20240808 15:01:08.259"/>
</test>
<test id="s1-t2" name="Start Charging Cycle On Both Ports Staggered for loadBalancing Validation." line="40">
<kw name="Check State Cable Connected" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the PP cable is connected.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_0}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:08.261" endtime="20240808 15:01:08.387"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:08.453" level="INFO">${data} = [0;32mI (01:00:17.914) CHARGER: State 1: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:08.387" endtime="20240808 15:01:08.453"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:10.454" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:08.454" endtime="20240808 15:01:10.454"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:10.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:10.455" endtime="20240808 15:01:10.455"/>
</kw>
<msg timestamp="20240808 15:01:10.455" level="INFO">${data} = [0;32mI (01:00:17.914) CHARGER: State 1: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:08.261" endtime="20240808 15:01:10.455"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_cable_con}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:01:10.513" level="INFO">${PP} = 6.673040793796488</msg>
<status status="PASS" starttime="20240808 15:01:10.455" endtime="20240808 15:01:10.513"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:01:10.537" level="INFO">${CP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:01:10.514" endtime="20240808 15:01:10.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:10.537" endtime="20240808 15:01:10.537"/>
</kw>
<status status="PASS" starttime="20240808 15:01:10.537" endtime="20240808 15:01:10.539"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:10.539" endtime="20240808 15:01:10.540"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:10.540" endtime="20240808 15:01:10.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:10.540" endtime="20240808 15:01:10.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:10.540" endtime="20240808 15:01:10.540"/>
</kw>
<status status="PASS" starttime="20240808 15:01:10.455" endtime="20240808 15:01:10.541"/>
</kw>
<status status="PASS" starttime="20240808 15:01:08.261" endtime="20240808 15:01:10.541"/>
</kw>
<kw name="Check State Cable Connected" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the PP cable is connected.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_4}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:10.541" endtime="20240808 15:01:10.546"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:10.661" level="INFO">${data} = [0;32mI (01:00:20.109) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:10.546" endtime="20240808 15:01:10.661"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:12.661" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:10.661" endtime="20240808 15:01:12.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:12.661" level="INFO">[0;32mI (01:00:20.109) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:12.661" endtime="20240808 15:01:12.661"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:12.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:12.662" endtime="20240808 15:01:12.662"/>
</kw>
<msg timestamp="20240808 15:01:12.662" level="INFO">${data} = [0;32mI (01:00:20.109) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:10.541" endtime="20240808 15:01:12.662"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_cable_con}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:12.686" level="INFO">${PP} = 6.911549755263089</msg>
<status status="PASS" starttime="20240808 15:01:12.662" endtime="20240808 15:01:12.686"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:12.710" level="INFO">${CP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:01:12.686" endtime="20240808 15:01:12.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:12.710" level="INFO">6.911549755263089</msg>
<status status="PASS" starttime="20240808 15:01:12.710" endtime="20240808 15:01:12.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:12.710" level="INFO">10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:01:12.710" endtime="20240808 15:01:12.710"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:13.710" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:12.710" endtime="20240808 15:01:13.710"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:13.710" endtime="20240808 15:01:13.710"/>
</kw>
<status status="PASS" starttime="20240808 15:01:13.710" endtime="20240808 15:01:13.710"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:13.710" endtime="20240808 15:01:13.712"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:13.712" endtime="20240808 15:01:13.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:13.712" level="INFO">[0;32mI (01:00:20.109) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:13.712" endtime="20240808 15:01:13.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:13.712" endtime="20240808 15:01:13.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:13.713" endtime="20240808 15:01:13.713"/>
</kw>
<status status="PASS" starttime="20240808 15:01:12.662" endtime="20240808 15:01:13.713"/>
</kw>
<status status="PASS" starttime="20240808 15:01:10.541" endtime="20240808 15:01:13.713"/>
</kw>
<kw name="Check State Car Connected" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the CP car connection is established.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_1}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:13.715" endtime="20240808 15:01:13.719"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:13.797" level="INFO">${data} = [0;32mI (01:00:23.253) CHARGER: State 1: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:13.719" endtime="20240808 15:01:13.797"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:15.798" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:13.797" endtime="20240808 15:01:15.798"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:15.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:15.798" endtime="20240808 15:01:15.798"/>
</kw>
<msg timestamp="20240808 15:01:15.799" level="INFO">${data} = [0;32mI (01:00:23.253) CHARGER: State 1: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:13.714" endtime="20240808 15:01:15.799"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_car_con}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:01:15.823" level="INFO">${PP} = 6.689138502128467</msg>
<status status="PASS" starttime="20240808 15:01:15.799" endtime="20240808 15:01:15.823"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:01:15.845" level="INFO">${CP} = 9.05485110928412</msg>
<status status="PASS" starttime="20240808 15:01:15.823" endtime="20240808 15:01:15.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:15.845" endtime="20240808 15:01:15.845"/>
</kw>
<status status="PASS" starttime="20240808 15:01:15.845" endtime="20240808 15:01:15.845"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:15.845" endtime="20240808 15:01:15.846"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:15.846" endtime="20240808 15:01:15.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:15.846" endtime="20240808 15:01:15.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:15.846" endtime="20240808 15:01:15.847"/>
</kw>
<status status="PASS" starttime="20240808 15:01:15.799" endtime="20240808 15:01:15.847"/>
</kw>
<status status="PASS" starttime="20240808 15:01:13.714" endtime="20240808 15:01:15.847"/>
</kw>
<kw name="Check State Car Connected" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the CP car connection is established.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_5}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:15.848" endtime="20240808 15:01:15.853"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:15.940" level="INFO">${data} = [0;32mI (01:00:25.394) CHARGER: State 2: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:15.853" endtime="20240808 15:01:15.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:17.940" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:15.940" endtime="20240808 15:01:17.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:17.941" level="INFO">[0;32mI (01:00:25.394) CHARGER: State 2: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:17.941" endtime="20240808 15:01:17.941"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:17.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:17.941" endtime="20240808 15:01:17.942"/>
</kw>
<msg timestamp="20240808 15:01:17.942" level="INFO">${data} = [0;32mI (01:00:25.394) CHARGER: State 2: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:15.848" endtime="20240808 15:01:17.942"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_car_con}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:17.966" level="INFO">${PP} = 6.905307783591908</msg>
<status status="PASS" starttime="20240808 15:01:17.942" endtime="20240808 15:01:17.966"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:17.988" level="INFO">${CP} = 8.993088128853675</msg>
<status status="PASS" starttime="20240808 15:01:17.966" endtime="20240808 15:01:17.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:17.988" level="INFO">6.905307783591908</msg>
<status status="PASS" starttime="20240808 15:01:17.988" endtime="20240808 15:01:17.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:17.988" level="INFO">8.993088128853675</msg>
<status status="PASS" starttime="20240808 15:01:17.988" endtime="20240808 15:01:17.988"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:18.988" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:17.988" endtime="20240808 15:01:18.988"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:18.989" endtime="20240808 15:01:18.989"/>
</kw>
<status status="PASS" starttime="20240808 15:01:18.989" endtime="20240808 15:01:18.989"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:18.989" endtime="20240808 15:01:18.989"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:18.989" endtime="20240808 15:01:18.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:18.990" level="INFO">[0;32mI (01:00:25.394) CHARGER: State 2: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:01:18.990" endtime="20240808 15:01:18.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:18.990" endtime="20240808 15:01:18.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:18.990" endtime="20240808 15:01:18.991"/>
</kw>
<status status="PASS" starttime="20240808 15:01:17.942" endtime="20240808 15:01:18.991"/>
</kw>
<status status="PASS" starttime="20240808 15:01:15.847" endtime="20240808 15:01:18.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>message=Waiting for CH_PWR</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:18.991" level="INFO">Waiting for CH_PWR</msg>
<status status="PASS" starttime="20240808 15:01:18.991" endtime="20240808 15:01:18.992"/>
</kw>
<kw name="Check State CH PWR" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if charging cloud is true.</doc>
<kw name="Collect State 15 sec" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<arg>${state_ch_PWR}</arg>
<msg timestamp="20240808 15:01:22.805" level="INFO">${data} = [0;32mI (01:00:32.254) CHARGER: State 1: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:18.992" endtime="20240808 15:01:22.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:22.805" level="INFO">[0;32mI (01:00:32.254) CHARGER: State 1: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:22.805" endtime="20240808 15:01:22.805"/>
</kw>
<status status="PASS" starttime="20240808 15:01:18.992" endtime="20240808 15:01:22.805"/>
</kw>
<kw name="Check State CH PWR" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if charging cloud is true.</doc>
<kw name="Collect State 15 sec" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<arg>${state_ch_PWR}</arg>
<msg timestamp="20240808 15:01:22.837" level="INFO">${data} = [0;32mI (01:00:32.298) CHARGER: State 2: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:22.806" endtime="20240808 15:01:22.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:22.837" level="INFO">[0;32mI (01:00:32.298) CHARGER: State 2: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:22.837" endtime="20240808 15:01:22.837"/>
</kw>
<status status="PASS" starttime="20240808 15:01:22.806" endtime="20240808 15:01:22.837"/>
</kw>
<kw name="Check State Car Requiring Power" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the CP car requests power.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_2}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:22.839" endtime="20240808 15:01:22.844"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:22.933" level="INFO">${data} = [0;32mI (01:00:32.390) CHARGER: State 1: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:22.844" endtime="20240808 15:01:22.933"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:24.934" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:22.933" endtime="20240808 15:01:24.934"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:24.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:24.934" endtime="20240808 15:01:24.934"/>
</kw>
<msg timestamp="20240808 15:01:24.934" level="INFO">${data} = [0;32mI (01:00:32.390) CHARGER: State 1: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:22.838" endtime="20240808 15:01:24.936"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_car_req}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:01:24.958" level="INFO">${PP} = 6.678625712949408</msg>
<status status="PASS" starttime="20240808 15:01:24.936" endtime="20240808 15:01:24.959"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:01:25.117" level="INFO">${CP} = 6.057386000679151</msg>
<status status="PASS" starttime="20240808 15:01:24.959" endtime="20240808 15:01:25.117"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:25.117" endtime="20240808 15:01:25.117"/>
</kw>
<status status="PASS" starttime="20240808 15:01:25.117" endtime="20240808 15:01:25.117"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:25.117" endtime="20240808 15:01:25.118"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:25.118" endtime="20240808 15:01:25.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:25.118" endtime="20240808 15:01:25.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:25.118" endtime="20240808 15:01:25.119"/>
</kw>
<status status="PASS" starttime="20240808 15:01:24.936" endtime="20240808 15:01:25.119"/>
</kw>
<status status="PASS" starttime="20240808 15:01:22.838" endtime="20240808 15:01:25.119"/>
</kw>
<kw name="Check State Car Requiring Power" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the CP car requests power.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_6}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:25.119" endtime="20240808 15:01:25.123"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:25.172" level="INFO">${data} = [0;32mI (01:00:34.631) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:25.124" endtime="20240808 15:01:25.172"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:27.174" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:25.173" endtime="20240808 15:01:27.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:27.174" level="INFO">[0;32mI (01:00:34.631) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:27.174" endtime="20240808 15:01:27.175"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:27.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:27.175" endtime="20240808 15:01:27.175"/>
</kw>
<msg timestamp="20240808 15:01:27.175" level="INFO">${data} = [0;32mI (01:00:34.631) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:25.119" endtime="20240808 15:01:27.175"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_car_req}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:27.198" level="INFO">${PP} = 6.885596294673335</msg>
<status status="PASS" starttime="20240808 15:01:27.176" endtime="20240808 15:01:27.198"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:27.475" level="INFO">${CP} = 6.091881045167204</msg>
<status status="PASS" starttime="20240808 15:01:27.198" endtime="20240808 15:01:27.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:27.475" level="INFO">6.885596294673335</msg>
<status status="PASS" starttime="20240808 15:01:27.475" endtime="20240808 15:01:27.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:27.477" level="INFO">6.091881045167204</msg>
<status status="PASS" starttime="20240808 15:01:27.477" endtime="20240808 15:01:27.477"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:28.477" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:27.477" endtime="20240808 15:01:28.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:28.477" endtime="20240808 15:01:28.477"/>
</kw>
<status status="PASS" starttime="20240808 15:01:28.477" endtime="20240808 15:01:28.477"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:28.477" endtime="20240808 15:01:28.478"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:28.478" endtime="20240808 15:01:28.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:28.479" level="INFO">[0;32mI (01:00:34.631) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:01:28.478" endtime="20240808 15:01:28.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:28.479" endtime="20240808 15:01:28.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:28.480" endtime="20240808 15:01:28.480"/>
</kw>
<status status="PASS" starttime="20240808 15:01:27.176" endtime="20240808 15:01:28.480"/>
</kw>
<status status="PASS" starttime="20240808 15:01:25.119" endtime="20240808 15:01:28.480"/>
</kw>
<kw name="Check State Car Charging" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the CP car starts charging.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_3}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:28.481" endtime="20240808 15:01:28.486"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:28.533" level="INFO">${data} = [0;32mI (01:00:37.990) CHARGER: State 1: CH_STATE_CHARGING[0m</msg>
<status status="PASS" starttime="20240808 15:01:28.486" endtime="20240808 15:01:28.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:30.534" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:28.533" endtime="20240808 15:01:30.534"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:30.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:30.534" endtime="20240808 15:01:30.535"/>
</kw>
<msg timestamp="20240808 15:01:30.535" level="INFO">${data} = [0;32mI (01:00:37.990) CHARGER: State 1: CH_STATE_CHARGING[0m</msg>
<status status="PASS" starttime="20240808 15:01:28.481" endtime="20240808 15:01:30.535"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_charging}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:01:30.557" level="INFO">${PP} = 6.7124637539846885</msg>
<status status="PASS" starttime="20240808 15:01:30.535" endtime="20240808 15:01:30.557"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:01:30.618" level="INFO">${CP} = 6.087610230000271</msg>
<status status="PASS" starttime="20240808 15:01:30.557" endtime="20240808 15:01:30.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:30.619" endtime="20240808 15:01:30.619"/>
</kw>
<status status="PASS" starttime="20240808 15:01:30.618" endtime="20240808 15:01:30.619"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:30.619" endtime="20240808 15:01:30.619"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:30.619" endtime="20240808 15:01:30.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:30.620" endtime="20240808 15:01:30.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:30.620" endtime="20240808 15:01:30.620"/>
</kw>
<status status="PASS" starttime="20240808 15:01:30.535" endtime="20240808 15:01:30.620"/>
</kw>
<status status="PASS" starttime="20240808 15:01:28.481" endtime="20240808 15:01:30.620"/>
</kw>
<kw name="Check State Car Charging" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the CP car starts charging.</doc>
<kw name="Simulate Cable Plugin" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_7}</arg>
<arg>${ser}</arg>
<kw name="Start Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:01:30.622" endtime="20240808 15:01:30.626"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:01:30.677" level="INFO">${data} = [0;32mI (01:00:40.132) CHARGER: State 2: CH_STATE_CHARGING[0m</msg>
<status status="PASS" starttime="20240808 15:01:30.626" endtime="20240808 15:01:30.677"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:32.677" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:01:30.677" endtime="20240808 15:01:32.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:32.678" level="INFO">[0;32mI (01:00:40.132) CHARGER: State 2: CH_STATE_CHARGING[0m</msg>
<status status="PASS" starttime="20240808 15:01:32.678" endtime="20240808 15:01:32.678"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:01:32.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:01:32.678" endtime="20240808 15:01:32.678"/>
</kw>
<msg timestamp="20240808 15:01:32.678" level="INFO">${data} = [0;32mI (01:00:40.132) CHARGER: State 2: CH_STATE_CHARGING[0m</msg>
<status status="PASS" starttime="20240808 15:01:30.621" endtime="20240808 15:01:32.678"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_charging}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:32.702" level="INFO">${PP} = 6.882311046604262</msg>
<status status="PASS" starttime="20240808 15:01:32.678" endtime="20240808 15:01:32.702"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:01:32.725" level="INFO">${CP} = 6.080054172490808</msg>
<status status="PASS" starttime="20240808 15:01:32.702" endtime="20240808 15:01:32.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:32.725" level="INFO">6.882311046604262</msg>
<status status="PASS" starttime="20240808 15:01:32.725" endtime="20240808 15:01:32.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:32.726" level="INFO">6.080054172490808</msg>
<status status="PASS" starttime="20240808 15:01:32.725" endtime="20240808 15:01:32.726"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:33.726" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:32.726" endtime="20240808 15:01:33.726"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:01:33.726" endtime="20240808 15:01:33.726"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.726" endtime="20240808 15:01:33.726"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:33.726" endtime="20240808 15:01:33.728"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:01:33.728" endtime="20240808 15:01:33.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.728" level="INFO">[0;32mI (01:00:40.132) CHARGER: State 2: CH_STATE_CHARGING[0m</msg>
<status status="PASS" starttime="20240808 15:01:33.728" endtime="20240808 15:01:33.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:33.728" endtime="20240808 15:01:33.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:01:33.728" endtime="20240808 15:01:33.728"/>
</kw>
<status status="PASS" starttime="20240808 15:01:32.678" endtime="20240808 15:01:33.729"/>
</kw>
<status status="PASS" starttime="20240808 15:01:30.621" endtime="20240808 15:01:33.729"/>
</kw>
<doc>Validates states from idle to charging on Connector 1.</doc>
<status status="PASS" starttime="20240808 15:01:08.260" endtime="20240808 15:01:33.729"/>
</test>
<test id="s1-t3" name="Check Duty Cycle and Fuse" line="54">
<kw name="Log" library="BuiltIn">
<arg>Loadbalancing</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.733" level="INFO">Loadbalancing</msg>
<status status="PASS" starttime="20240808 15:01:33.731" endtime="20240808 15:01:33.733"/>
</kw>
<kw name="Check Duty Cycle Both Ports" library="State_Cycle_Test_Port_1">
<doc>Checks Duty Cycle +3 A Above Fuse</doc>
<kw name="Get Main Fuse Value From Config File" library="Config_Loader">
<var>${FUSE}</var>
<kw name="Get Lines Matching Pattern In CSV" library="Config_Loader">
<var>${lines}</var>
<arg>${file_path}</arg>
<arg>${MAIN_FUSE}</arg>
<kw name="Create List" library="BuiltIn">
<var>${lines}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20240808 15:01:33.734" level="INFO">${lines} = []</msg>
<status status="PASS" starttime="20240808 15:01:33.734" endtime="20240808 15:01:33.734"/>
</kw>
<kw name="Read Csv File To List" library="CSVLibrary">
<var>${csv_data}</var>
<arg>${file_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<msg timestamp="20240808 15:01:33.735" level="INFO">${csv_data} = [['ESP-ROM:esp32s3-20210327'], ['Build:Mar 27 2021'], ['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)'], ['SPIWP:0xee'], ['Octal Flash Mode Enabled'], ['For OPI Flash', ' Use Default Flash Boot...</msg>
<status status="PASS" starttime="20240808 15:01:33.734" endtime="20240808 15:01:33.735"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${leng}</var>
<arg>${csv_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240808 15:01:33.735" level="INFO">Length is 92</msg>
<msg timestamp="20240808 15:01:33.735" level="INFO">${leng} = 92</msg>
<status status="PASS" starttime="20240808 15:01:33.735" endtime="20240808 15:01:33.735"/>
</kw>
<for flavor="IN">
<var>${line}</var>
<value>@{csv_data}</value>
<iter>
<var name="${line}">['ESP-ROM:esp32s3-20210327']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.735" level="INFO">line: ['ESP-ROM:esp32s3-20210327']</msg>
<status status="PASS" starttime="20240808 15:01:33.735" endtime="20240808 15:01:33.736"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.736" level="INFO">${string} = ['ESP-ROM:esp32s3-20210327']</msg>
<status status="PASS" starttime="20240808 15:01:33.736" endtime="20240808 15:01:33.736"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.737" level="FAIL">'['ESP-ROM:esp32s3-20210327']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.737" endtime="20240808 15:01:33.737"/>
</kw>
<msg timestamp="20240808 15:01:33.737" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.736" endtime="20240808 15:01:33.737"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.737" endtime="20240808 15:01:33.738"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.735" endtime="20240808 15:01:33.738"/>
</iter>
<iter>
<var name="${line}">['Build:Mar 27 2021']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.738" level="INFO">line: ['Build:Mar 27 2021']</msg>
<status status="PASS" starttime="20240808 15:01:33.738" endtime="20240808 15:01:33.738"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.738" level="INFO">${string} = ['Build:Mar 27 2021']</msg>
<status status="PASS" starttime="20240808 15:01:33.738" endtime="20240808 15:01:33.738"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.738" level="FAIL">'['Build:Mar 27 2021']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.738" endtime="20240808 15:01:33.739"/>
</kw>
<msg timestamp="20240808 15:01:33.739" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.738" endtime="20240808 15:01:33.739"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.739" endtime="20240808 15:01:33.739"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.738" endtime="20240808 15:01:33.739"/>
</iter>
<iter>
<var name="${line}">['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.739" level="INFO">line: ['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']</msg>
<status status="PASS" starttime="20240808 15:01:33.739" endtime="20240808 15:01:33.739"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.740" level="INFO">${string} = ['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']</msg>
<status status="PASS" starttime="20240808 15:01:33.739" endtime="20240808 15:01:33.740"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.740" level="FAIL">'['rst:0x1 (POWERON)', 'boot:0x18 (SPI_FAST_FLASH_BOOT)']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.740" endtime="20240808 15:01:33.740"/>
</kw>
<msg timestamp="20240808 15:01:33.740" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.740" endtime="20240808 15:01:33.740"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.741" endtime="20240808 15:01:33.741"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.739" endtime="20240808 15:01:33.741"/>
</iter>
<iter>
<var name="${line}">['SPIWP:0xee']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.741" level="INFO">line: ['SPIWP:0xee']</msg>
<status status="PASS" starttime="20240808 15:01:33.741" endtime="20240808 15:01:33.741"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.741" level="INFO">${string} = ['SPIWP:0xee']</msg>
<status status="PASS" starttime="20240808 15:01:33.741" endtime="20240808 15:01:33.741"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.742" level="FAIL">'['SPIWP:0xee']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.742" endtime="20240808 15:01:33.742"/>
</kw>
<msg timestamp="20240808 15:01:33.742" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.741" endtime="20240808 15:01:33.742"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.742" endtime="20240808 15:01:33.742"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.741" endtime="20240808 15:01:33.742"/>
</iter>
<iter>
<var name="${line}">['Octal Flash Mode Enabled']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.742" level="INFO">line: ['Octal Flash Mode Enabled']</msg>
<status status="PASS" starttime="20240808 15:01:33.742" endtime="20240808 15:01:33.742"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.743" level="INFO">${string} = ['Octal Flash Mode Enabled']</msg>
<status status="PASS" starttime="20240808 15:01:33.742" endtime="20240808 15:01:33.743"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.743" level="FAIL">'['Octal Flash Mode Enabled']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.743" endtime="20240808 15:01:33.743"/>
</kw>
<msg timestamp="20240808 15:01:33.744" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.743" endtime="20240808 15:01:33.744"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.744" endtime="20240808 15:01:33.744"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.742" endtime="20240808 15:01:33.744"/>
</iter>
<iter>
<var name="${line}">['For OPI Flash', ' Use Default Flash Boot Mode']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.744" level="INFO">line: ['For OPI Flash', ' Use Default Flash Boot Mode']</msg>
<status status="PASS" starttime="20240808 15:01:33.744" endtime="20240808 15:01:33.744"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.745" level="INFO">${string} = ['For OPI Flash', ' Use Default Flash Boot Mode']</msg>
<status status="PASS" starttime="20240808 15:01:33.745" endtime="20240808 15:01:33.745"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.745" level="FAIL">'['For OPI Flash', ' Use Default Flash Boot Mode']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.745" endtime="20240808 15:01:33.745"/>
</kw>
<msg timestamp="20240808 15:01:33.745" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.745" endtime="20240808 15:01:33.745"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.745" endtime="20240808 15:01:33.746"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.744" endtime="20240808 15:01:33.746"/>
</iter>
<iter>
<var name="${line}">['mode:SLOW_RD', ' clock div:1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.746" level="INFO">line: ['mode:SLOW_RD', ' clock div:1']</msg>
<status status="PASS" starttime="20240808 15:01:33.746" endtime="20240808 15:01:33.746"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.746" level="INFO">${string} = ['mode:SLOW_RD', ' clock div:1']</msg>
<status status="PASS" starttime="20240808 15:01:33.746" endtime="20240808 15:01:33.746"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.747" level="FAIL">'['mode:SLOW_RD', ' clock div:1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.747" endtime="20240808 15:01:33.747"/>
</kw>
<msg timestamp="20240808 15:01:33.747" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.746" endtime="20240808 15:01:33.747"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.747" endtime="20240808 15:01:33.747"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.746" endtime="20240808 15:01:33.747"/>
</iter>
<iter>
<var name="${line}">['load:0x3fce2810', 'len:0x13b4']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.747" level="INFO">line: ['load:0x3fce2810', 'len:0x13b4']</msg>
<status status="PASS" starttime="20240808 15:01:33.747" endtime="20240808 15:01:33.747"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.749" level="INFO">${string} = ['load:0x3fce2810', 'len:0x13b4']</msg>
<status status="PASS" starttime="20240808 15:01:33.749" endtime="20240808 15:01:33.749"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.750" level="FAIL">'['load:0x3fce2810', 'len:0x13b4']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.749" endtime="20240808 15:01:33.750"/>
</kw>
<msg timestamp="20240808 15:01:33.750" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.749" endtime="20240808 15:01:33.750"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.750" endtime="20240808 15:01:33.751"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.747" endtime="20240808 15:01:33.751"/>
</iter>
<iter>
<var name="${line}">['load:0x403c8700', 'len:0x4']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.752" level="INFO">line: ['load:0x403c8700', 'len:0x4']</msg>
<status status="PASS" starttime="20240808 15:01:33.751" endtime="20240808 15:01:33.752"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.753" level="INFO">${string} = ['load:0x403c8700', 'len:0x4']</msg>
<status status="PASS" starttime="20240808 15:01:33.753" endtime="20240808 15:01:33.753"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.754" level="FAIL">'['load:0x403c8700', 'len:0x4']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.754" endtime="20240808 15:01:33.754"/>
</kw>
<msg timestamp="20240808 15:01:33.755" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.753" endtime="20240808 15:01:33.755"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.755" endtime="20240808 15:01:33.755"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.751" endtime="20240808 15:01:33.755"/>
</iter>
<iter>
<var name="${line}">['load:0x403c8704', 'len:0xce0']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.756" level="INFO">line: ['load:0x403c8704', 'len:0xce0']</msg>
<status status="PASS" starttime="20240808 15:01:33.756" endtime="20240808 15:01:33.756"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.756" level="INFO">${string} = ['load:0x403c8704', 'len:0xce0']</msg>
<status status="PASS" starttime="20240808 15:01:33.756" endtime="20240808 15:01:33.756"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.757" level="FAIL">'['load:0x403c8704', 'len:0xce0']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.757" endtime="20240808 15:01:33.757"/>
</kw>
<msg timestamp="20240808 15:01:33.757" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.756" endtime="20240808 15:01:33.757"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.757" endtime="20240808 15:01:33.758"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.755" endtime="20240808 15:01:33.758"/>
</iter>
<iter>
<var name="${line}">['load:0x403cb700', 'len:0x33d4']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.758" level="INFO">line: ['load:0x403cb700', 'len:0x33d4']</msg>
<status status="PASS" starttime="20240808 15:01:33.758" endtime="20240808 15:01:33.758"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.758" level="INFO">${string} = ['load:0x403cb700', 'len:0x33d4']</msg>
<status status="PASS" starttime="20240808 15:01:33.758" endtime="20240808 15:01:33.758"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.758" level="FAIL">'['load:0x403cb700', 'len:0x33d4']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.758" endtime="20240808 15:01:33.758"/>
</kw>
<msg timestamp="20240808 15:01:33.758" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.758" endtime="20240808 15:01:33.758"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.758" endtime="20240808 15:01:33.759"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.758" endtime="20240808 15:01:33.759"/>
</iter>
<iter>
<var name="${line}">['entry 0x403c8968']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.759" level="INFO">line: ['entry 0x403c8968']</msg>
<status status="PASS" starttime="20240808 15:01:33.759" endtime="20240808 15:01:33.759"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.759" level="INFO">${string} = ['entry 0x403c8968']</msg>
<status status="PASS" starttime="20240808 15:01:33.759" endtime="20240808 15:01:33.759"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.760" level="FAIL">'['entry 0x403c8968']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.760" endtime="20240808 15:01:33.760"/>
</kw>
<msg timestamp="20240808 15:01:33.760" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.759" endtime="20240808 15:01:33.760"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.760" endtime="20240808 15:01:33.760"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.759" endtime="20240808 15:01:33.760"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.162) MAIN: Start APP NISO EV!']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.761" level="INFO">line: ['I (00:00:00.162) MAIN: Start APP NISO EV!']</msg>
<status status="PASS" starttime="20240808 15:01:33.761" endtime="20240808 15:01:33.761"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.761" level="INFO">${string} = ['I (00:00:00.162) MAIN: Start APP NISO EV!']</msg>
<status status="PASS" starttime="20240808 15:01:33.761" endtime="20240808 15:01:33.761"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.762" level="FAIL">'['I (00:00:00.162) MAIN: Start APP NISO EV!']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.761" endtime="20240808 15:01:33.762"/>
</kw>
<msg timestamp="20240808 15:01:33.762" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.761" endtime="20240808 15:01:33.762"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.762" endtime="20240808 15:01:33.762"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.760" endtime="20240808 15:01:33.762"/>
</iter>
<iter>
<var name="${line}">[]</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.763" level="INFO">line: []</msg>
<status status="PASS" starttime="20240808 15:01:33.763" endtime="20240808 15:01:33.763"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.763" level="INFO">${string} = []</msg>
<status status="PASS" starttime="20240808 15:01:33.763" endtime="20240808 15:01:33.763"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.764" level="FAIL">'[]' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.763" endtime="20240808 15:01:33.764"/>
</kw>
<msg timestamp="20240808 15:01:33.764" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.763" endtime="20240808 15:01:33.764"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.764" endtime="20240808 15:01:33.764"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.762" endtime="20240808 15:01:33.764"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.765" level="INFO">line: ['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:33.764" endtime="20240808 15:01:33.765"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.765" level="INFO">${string} = ['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:33.765" endtime="20240808 15:01:33.765"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.765" level="FAIL">'['I (00:00:00.162) MAIN: This is esp32s3 chip with 2 CPU core(s)', ' WiFi/BLE', ' ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.765" endtime="20240808 15:01:33.765"/>
</kw>
<msg timestamp="20240808 15:01:33.765" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.765" endtime="20240808 15:01:33.765"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.765" endtime="20240808 15:01:33.765"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.764" endtime="20240808 15:01:33.766"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.766" level="INFO">line: ['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:33.766" endtime="20240808 15:01:33.766"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.766" level="INFO">${string} = ['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']</msg>
<status status="PASS" starttime="20240808 15:01:33.766" endtime="20240808 15:01:33.766"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.766" level="FAIL">'['I (00:00:00.163) MAIN: silicon revision v0.1', ' ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.766" endtime="20240808 15:01:33.766"/>
</kw>
<msg timestamp="20240808 15:01:33.766" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.766" endtime="20240808 15:01:33.766"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.766" endtime="20240808 15:01:33.767"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.766" endtime="20240808 15:01:33.767"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.168) MAIN: 32MB external flash']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.767" level="INFO">line: ['I (00:00:00.168) MAIN: 32MB external flash']</msg>
<status status="PASS" starttime="20240808 15:01:33.767" endtime="20240808 15:01:33.767"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.768" level="INFO">${string} = ['I (00:00:00.168) MAIN: 32MB external flash']</msg>
<status status="PASS" starttime="20240808 15:01:33.767" endtime="20240808 15:01:33.768"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.768" level="FAIL">'['I (00:00:00.168) MAIN: 32MB external flash']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.768"/>
</kw>
<msg timestamp="20240808 15:01:33.768" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.768"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.768"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.767" endtime="20240808 15:01:33.768"/>
</iter>
<iter>
<var name="${line}">[]</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.768" level="INFO">line: []</msg>
<status status="PASS" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.768"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.768" level="INFO">${string} = []</msg>
<status status="PASS" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.768"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.770" level="FAIL">'[]' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.770" endtime="20240808 15:01:33.770"/>
</kw>
<msg timestamp="20240808 15:01:33.770" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.770"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.770" endtime="20240808 15:01:33.770"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.768" endtime="20240808 15:01:33.770"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.771" level="INFO">line: ['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:33.771" endtime="20240808 15:01:33.771"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.771" level="INFO">${string} = ['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:33.771" endtime="20240808 15:01:33.771"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.771" level="FAIL">'['I (00:00:00.173) MAIN: Minimum free heap size: 6962916 bytes']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.771" endtime="20240808 15:01:33.771"/>
</kw>
<msg timestamp="20240808 15:01:33.771" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.771" endtime="20240808 15:01:33.771"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.771" endtime="20240808 15:01:33.771"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.770" endtime="20240808 15:01:33.772"/>
</iter>
<iter>
<var name="${line}">[]</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.772" level="INFO">line: []</msg>
<status status="PASS" starttime="20240808 15:01:33.772" endtime="20240808 15:01:33.772"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.772" level="INFO">${string} = []</msg>
<status status="PASS" starttime="20240808 15:01:33.772" endtime="20240808 15:01:33.772"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.772" level="FAIL">'[]' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.772" endtime="20240808 15:01:33.772"/>
</kw>
<msg timestamp="20240808 15:01:33.772" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.772" endtime="20240808 15:01:33.772"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.772" endtime="20240808 15:01:33.773"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.772" endtime="20240808 15:01:33.773"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.773" level="INFO">line: ['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:33.773" endtime="20240808 15:01:33.773"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.773" level="INFO">${string} = ['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']</msg>
<status status="PASS" starttime="20240808 15:01:33.773" endtime="20240808 15:01:33.773"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.773" level="FAIL">'['I (00:00:00.179) MAIN: Free memory: 6962916 bytes']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.773" endtime="20240808 15:01:33.773"/>
</kw>
<msg timestamp="20240808 15:01:33.773" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.773" endtime="20240808 15:01:33.773"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.773" endtime="20240808 15:01:33.774"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.773" endtime="20240808 15:01:33.774"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.774" level="INFO">line: ['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']</msg>
<status status="PASS" starttime="20240808 15:01:33.774" endtime="20240808 15:01:33.774"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.774" level="INFO">${string} = ['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']</msg>
<status status="PASS" starttime="20240808 15:01:33.774" endtime="20240808 15:01:33.774"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.774" level="FAIL">'['I (00:00:00.184) MAIN: IDF version: v5.3-rc1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.774" endtime="20240808 15:01:33.775"/>
</kw>
<msg timestamp="20240808 15:01:33.775" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.774" endtime="20240808 15:01:33.775"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.775" endtime="20240808 15:01:33.775"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.774" endtime="20240808 15:01:33.775"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.775" level="INFO">line: ['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</msg>
<status status="PASS" starttime="20240808 15:01:33.775" endtime="20240808 15:01:33.775"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.775" level="INFO">${string} = ['I (00:00:00.189) MAIN: SW name: NISO_v0.15']</msg>
<status status="PASS" starttime="20240808 15:01:33.775" endtime="20240808 15:01:33.775"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.776" level="FAIL">'['I (00:00:00.189) MAIN: SW name: NISO_v0.15']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.776" endtime="20240808 15:01:33.776"/>
</kw>
<msg timestamp="20240808 15:01:33.776" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.776" endtime="20240808 15:01:33.776"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.776" endtime="20240808 15:01:33.777"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.775" endtime="20240808 15:01:33.777"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.194) NVS: Init of NVS...']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.777" level="INFO">line: ['I (00:00:00.194) NVS: Init of NVS...']</msg>
<status status="PASS" starttime="20240808 15:01:33.777" endtime="20240808 15:01:33.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.777" level="INFO">${string} = ['I (00:00:00.194) NVS: Init of NVS...']</msg>
<status status="PASS" starttime="20240808 15:01:33.777" endtime="20240808 15:01:33.777"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.777" level="FAIL">'['I (00:00:00.194) NVS: Init of NVS...']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.777" endtime="20240808 15:01:33.777"/>
</kw>
<msg timestamp="20240808 15:01:33.777" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.777" endtime="20240808 15:01:33.777"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.778" endtime="20240808 15:01:33.778"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.777" endtime="20240808 15:01:33.778"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.204) NVS: Init of NVS performed err = 0']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.778" level="INFO">line: ['I (00:00:00.204) NVS: Init of NVS performed err = 0']</msg>
<status status="PASS" starttime="20240808 15:01:33.778" endtime="20240808 15:01:33.778"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.778" level="INFO">${string} = ['I (00:00:00.204) NVS: Init of NVS performed err = 0']</msg>
<status status="PASS" starttime="20240808 15:01:33.778" endtime="20240808 15:01:33.778"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.778" level="FAIL">'['I (00:00:00.204) NVS: Init of NVS performed err = 0']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.778" endtime="20240808 15:01:33.778"/>
</kw>
<msg timestamp="20240808 15:01:33.779" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.778" endtime="20240808 15:01:33.779"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.779" endtime="20240808 15:01:33.779"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.778" endtime="20240808 15:01:33.779"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.208) GPIO: GPIO Semaphore created.']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.779" level="INFO">line: ['I (00:00:00.208) GPIO: GPIO Semaphore created.']</msg>
<status status="PASS" starttime="20240808 15:01:33.779" endtime="20240808 15:01:33.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.779" level="INFO">${string} = ['I (00:00:00.208) GPIO: GPIO Semaphore created.']</msg>
<status status="PASS" starttime="20240808 15:01:33.779" endtime="20240808 15:01:33.780"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.780" level="FAIL">'['I (00:00:00.208) GPIO: GPIO Semaphore created.']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.780" endtime="20240808 15:01:33.780"/>
</kw>
<msg timestamp="20240808 15:01:33.780" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.780" endtime="20240808 15:01:33.780"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.780" endtime="20240808 15:01:33.780"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.779" endtime="20240808 15:01:33.780"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.209) gpio: GPIO[14]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.781" level="INFO">line: ['I (00:00:00.209) gpio: GPIO[14]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.781"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.781" level="INFO">${string} = ['I (00:00:00.209) gpio: GPIO[14]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.781"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.781" level="FAIL">'['I (00:00:00.209) gpio: GPIO[14]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.781"/>
</kw>
<msg timestamp="20240808 15:01:33.781" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.781"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.781"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.781"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.219) gpio: GPIO[21]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.783" level="INFO">line: ['I (00:00:00.219) gpio: GPIO[21]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.782" endtime="20240808 15:01:33.783"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.783" level="INFO">${string} = ['I (00:00:00.219) gpio: GPIO[21]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.783" endtime="20240808 15:01:33.783"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.783" level="FAIL">'['I (00:00:00.219) gpio: GPIO[21]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.783" endtime="20240808 15:01:33.783"/>
</kw>
<msg timestamp="20240808 15:01:33.783" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.783" endtime="20240808 15:01:33.783"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.784" endtime="20240808 15:01:33.784"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.781" endtime="20240808 15:01:33.784"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.229) gpio: GPIO[42]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.784" level="INFO">line: ['I (00:00:00.229) gpio: GPIO[42]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.784" endtime="20240808 15:01:33.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.784" level="INFO">${string} = ['I (00:00:00.229) gpio: GPIO[42]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.784" endtime="20240808 15:01:33.784"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.784" level="FAIL">'['I (00:00:00.229) gpio: GPIO[42]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.784" endtime="20240808 15:01:33.785"/>
</kw>
<msg timestamp="20240808 15:01:33.785" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.784" endtime="20240808 15:01:33.785"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.785" endtime="20240808 15:01:33.785"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.784" endtime="20240808 15:01:33.785"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.239) gpio: GPIO[7]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.785" level="INFO">line: ['I (00:00:00.239) gpio: GPIO[7]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.785" endtime="20240808 15:01:33.785"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.786" level="INFO">${string} = ['I (00:00:00.239) gpio: GPIO[7]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.785" endtime="20240808 15:01:33.786"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.786" level="FAIL">'['I (00:00:00.239) gpio: GPIO[7]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.786" endtime="20240808 15:01:33.786"/>
</kw>
<msg timestamp="20240808 15:01:33.786" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.786" endtime="20240808 15:01:33.786"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.786" endtime="20240808 15:01:33.786"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.785" endtime="20240808 15:01:33.787"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.249) gpio: GPIO[19]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.787" level="INFO">line: ['I (00:00:00.249) gpio: GPIO[19]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.787" endtime="20240808 15:01:33.787"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.787" level="INFO">${string} = ['I (00:00:00.249) gpio: GPIO[19]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.787" endtime="20240808 15:01:33.787"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.788" level="FAIL">'['I (00:00:00.249) gpio: GPIO[19]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.788" endtime="20240808 15:01:33.788"/>
</kw>
<msg timestamp="20240808 15:01:33.788" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.787" endtime="20240808 15:01:33.788"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.788" endtime="20240808 15:01:33.788"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.787" endtime="20240808 15:01:33.788"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.259) gpio: GPIO[38]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.788" level="INFO">line: ['I (00:00:00.259) gpio: GPIO[38]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.788" endtime="20240808 15:01:33.788"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.788" level="INFO">${string} = ['I (00:00:00.259) gpio: GPIO[38]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.788" endtime="20240808 15:01:33.788"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.790" level="FAIL">'['I (00:00:00.259) gpio: GPIO[38]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.790"/>
</kw>
<msg timestamp="20240808 15:01:33.790" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.790"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.790"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.788" endtime="20240808 15:01:33.790"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.269) gpio: GPIO[9]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.790" level="INFO">line: ['I (00:00:00.269) gpio: GPIO[9]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.790"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.790" level="INFO">${string} = ['I (00:00:00.269) gpio: GPIO[9]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.790"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.790" level="FAIL">'['I (00:00:00.269) gpio: GPIO[9]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.790"/>
</kw>
<msg timestamp="20240808 15:01:33.792" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.792"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.792" endtime="20240808 15:01:33.792"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.790" endtime="20240808 15:01:33.792"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.278) gpio: GPIO[10]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.792" level="INFO">line: ['I (00:00:00.278) gpio: GPIO[10]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.792" endtime="20240808 15:01:33.792"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.792" level="INFO">${string} = ['I (00:00:00.278) gpio: GPIO[10]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.792" endtime="20240808 15:01:33.792"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.793" level="FAIL">'['I (00:00:00.278) gpio: GPIO[10]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.792" endtime="20240808 15:01:33.793"/>
</kw>
<msg timestamp="20240808 15:01:33.793" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.792" endtime="20240808 15:01:33.793"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.793" endtime="20240808 15:01:33.793"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.792" endtime="20240808 15:01:33.793"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.288) gpio: GPIO[46]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.793" level="INFO">line: ['I (00:00:00.288) gpio: GPIO[46]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.793" endtime="20240808 15:01:33.793"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.794" level="INFO">${string} = ['I (00:00:00.288) gpio: GPIO[46]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.794" endtime="20240808 15:01:33.794"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.794" level="FAIL">'['I (00:00:00.288) gpio: GPIO[46]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.794" endtime="20240808 15:01:33.794"/>
</kw>
<msg timestamp="20240808 15:01:33.794" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.794" endtime="20240808 15:01:33.794"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.794" endtime="20240808 15:01:33.794"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.793" endtime="20240808 15:01:33.794"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.298) gpio: GPIO[3]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 1| Intr:0 ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.795" level="INFO">line: ['I (00:00:00.298) gpio: GPIO[3]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 1| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.795" endtime="20240808 15:01:33.795"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.795" level="INFO">${string} = ['I (00:00:00.298) gpio: GPIO[3]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 1| Intr:0 ']</msg>
<status status="PASS" starttime="20240808 15:01:33.795" endtime="20240808 15:01:33.795"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.795" level="FAIL">'['I (00:00:00.298) gpio: GPIO[3]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 1| Intr:0 ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.795" endtime="20240808 15:01:33.795"/>
</kw>
<msg timestamp="20240808 15:01:33.795" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.795" endtime="20240808 15:01:33.795"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.795" endtime="20240808 15:01:33.795"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.794" endtime="20240808 15:01:33.795"/>
</iter>
<iter>
<var name="${line}">['V (00:00:00.406) DTC: Semaphore created.']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.796" level="INFO">line: ['V (00:00:00.406) DTC: Semaphore created.']</msg>
<status status="PASS" starttime="20240808 15:01:33.796" endtime="20240808 15:01:33.796"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.796" level="INFO">${string} = ['V (00:00:00.406) DTC: Semaphore created.']</msg>
<status status="PASS" starttime="20240808 15:01:33.796" endtime="20240808 15:01:33.796"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.796" level="FAIL">'['V (00:00:00.406) DTC: Semaphore created.']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.796" endtime="20240808 15:01:33.796"/>
</kw>
<msg timestamp="20240808 15:01:33.796" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.796" endtime="20240808 15:01:33.796"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.796" endtime="20240808 15:01:33.797"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.796" endtime="20240808 15:01:33.797"/>
</iter>
<iter>
<var name="${line}">['I (00:00:00.406) NVS: Init DTC...']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.797" level="INFO">line: ['I (00:00:00.406) NVS: Init DTC...']</msg>
<status status="PASS" starttime="20240808 15:01:33.797" endtime="20240808 15:01:33.797"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.797" level="INFO">${string} = ['I (00:00:00.406) NVS: Init DTC...']</msg>
<status status="PASS" starttime="20240808 15:01:33.797" endtime="20240808 15:01:33.797"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.798" level="FAIL">'['I (00:00:00.406) NVS: Init DTC...']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.797" endtime="20240808 15:01:33.798"/>
</kw>
<msg timestamp="20240808 15:01:33.798" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.797" endtime="20240808 15:01:33.798"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.798" endtime="20240808 15:01:33.799"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.797" endtime="20240808 15:01:33.799"/>
</iter>
<iter>
<var name="${line}">['D (00:00:00.419) DTC: Init of niso DTC performed err = 0']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.799" level="INFO">line: ['D (00:00:00.419) DTC: Init of niso DTC performed err = 0']</msg>
<status status="PASS" starttime="20240808 15:01:33.799" endtime="20240808 15:01:33.799"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.800" level="INFO">${string} = ['D (00:00:00.419) DTC: Init of niso DTC performed err = 0']</msg>
<status status="PASS" starttime="20240808 15:01:33.799" endtime="20240808 15:01:33.800"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.800" level="FAIL">'['D (00:00:00.419) DTC: Init of niso DTC performed err = 0']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.800" endtime="20240808 15:01:33.800"/>
</kw>
<msg timestamp="20240808 15:01:33.800" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.800" endtime="20240808 15:01:33.800"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.800" endtime="20240808 15:01:33.800"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.799" endtime="20240808 15:01:33.801"/>
</iter>
<iter>
<var name="${line}">['E (1401) esp_timer: Task is already initialized']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.801" level="INFO">line: ['E (1401) esp_timer: Task is already initialized']</msg>
<status status="PASS" starttime="20240808 15:01:33.801" endtime="20240808 15:01:33.801"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.801" level="INFO">${string} = ['E (1401) esp_timer: Task is already initialized']</msg>
<status status="PASS" starttime="20240808 15:01:33.801" endtime="20240808 15:01:33.801"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.801" level="FAIL">'['E (1401) esp_timer: Task is already initialized']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.801" endtime="20240808 15:01:33.801"/>
</kw>
<msg timestamp="20240808 15:01:33.801" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.801" endtime="20240808 15:01:33.801"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.801" endtime="20240808 15:01:33.802"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.801" endtime="20240808 15:01:33.802"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.516) OCPP: websocket init']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.802" level="INFO">line: ['I (01:00:00.516) OCPP: websocket init']</msg>
<status status="PASS" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.802"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.802" level="INFO">${string} = ['I (01:00:00.516) OCPP: websocket init']</msg>
<status status="PASS" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.802"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.802" level="FAIL">'['I (01:00:00.516) OCPP: websocket init']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.802"/>
</kw>
<msg timestamp="20240808 15:01:33.802" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.802"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.802"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.802"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.616) MAIN: Read value Config port 1: 1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.803" level="INFO">line: ['I (01:00:00.616) MAIN: Read value Config port 1: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.803" endtime="20240808 15:01:33.803"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.803" level="INFO">${string} = ['I (01:00:00.616) MAIN: Read value Config port 1: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.803" endtime="20240808 15:01:33.803"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.803" level="FAIL">'['I (01:00:00.616) MAIN: Read value Config port 1: 1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.803" endtime="20240808 15:01:33.803"/>
</kw>
<msg timestamp="20240808 15:01:33.803" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.803" endtime="20240808 15:01:33.803"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.803" endtime="20240808 15:01:33.803"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.802" endtime="20240808 15:01:33.803"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.616) MAIN: Read value Config port 2: 1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.804" level="INFO">line: ['I (01:00:00.616) MAIN: Read value Config port 2: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.804" endtime="20240808 15:01:33.804"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.804" level="INFO">${string} = ['I (01:00:00.616) MAIN: Read value Config port 2: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.804" endtime="20240808 15:01:33.804"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.804" level="FAIL">'['I (01:00:00.616) MAIN: Read value Config port 2: 1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.804" endtime="20240808 15:01:33.804"/>
</kw>
<msg timestamp="20240808 15:01:33.804" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.804" endtime="20240808 15:01:33.804"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.804" endtime="20240808 15:01:33.805"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.803" endtime="20240808 15:01:33.805"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.617) MAIN: Read value Current port 1 max: 16']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.805" level="INFO">line: ['I (01:00:00.617) MAIN: Read value Current port 1 max: 16']</msg>
<status status="PASS" starttime="20240808 15:01:33.805" endtime="20240808 15:01:33.805"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.805" level="INFO">${string} = ['I (01:00:00.617) MAIN: Read value Current port 1 max: 16']</msg>
<status status="PASS" starttime="20240808 15:01:33.805" endtime="20240808 15:01:33.805"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.805" level="FAIL">'['I (01:00:00.617) MAIN: Read value Current port 1 max: 16']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.805" endtime="20240808 15:01:33.805"/>
</kw>
<msg timestamp="20240808 15:01:33.805" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.805" endtime="20240808 15:01:33.805"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.805" endtime="20240808 15:01:33.806"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.805" endtime="20240808 15:01:33.806"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.622) MAIN: Read value Current port 2 max: 16']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.806" level="INFO">line: ['I (01:00:00.622) MAIN: Read value Current port 2 max: 16']</msg>
<status status="PASS" starttime="20240808 15:01:33.806" endtime="20240808 15:01:33.806"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.806" level="INFO">${string} = ['I (01:00:00.622) MAIN: Read value Current port 2 max: 16']</msg>
<status status="PASS" starttime="20240808 15:01:33.806" endtime="20240808 15:01:33.806"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.806" level="FAIL">'['I (01:00:00.622) MAIN: Read value Current port 2 max: 16']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.806" endtime="20240808 15:01:33.806"/>
</kw>
<msg timestamp="20240808 15:01:33.806" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.806" endtime="20240808 15:01:33.806"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.806" endtime="20240808 15:01:33.808"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.806" endtime="20240808 15:01:33.808"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.628) MAIN: Read Value Use cloud: 1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.808" level="INFO">line: ['I (01:00:00.628) MAIN: Read Value Use cloud: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.808" endtime="20240808 15:01:33.808"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.808" level="INFO">${string} = ['I (01:00:00.628) MAIN: Read Value Use cloud: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.808" endtime="20240808 15:01:33.808"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.808" level="FAIL">'['I (01:00:00.628) MAIN: Read Value Use cloud: 1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.808" endtime="20240808 15:01:33.808"/>
</kw>
<msg timestamp="20240808 15:01:33.808" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.808" endtime="20240808 15:01:33.808"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.808" endtime="20240808 15:01:33.808"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.808" endtime="20240808 15:01:33.809"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.633) MAIN: Read Value Meter 1: 1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.809" level="INFO">line: ['I (01:00:00.633) MAIN: Read Value Meter 1: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.809" level="INFO">${string} = ['I (01:00:00.633) MAIN: Read Value Meter 1: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.809" level="FAIL">'['I (01:00:00.633) MAIN: Read Value Meter 1: 1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<msg timestamp="20240808 15:01:33.809" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.637) MAIN: Read Value Meter 2: 1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.809" level="INFO">line: ['I (01:00:00.637) MAIN: Read Value Meter 2: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.809" level="INFO">${string} = ['I (01:00:00.637) MAIN: Read Value Meter 2: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.809"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.810" level="FAIL">'['I (01:00:00.637) MAIN: Read Value Meter 2: 1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.810" endtime="20240808 15:01:33.810"/>
</kw>
<msg timestamp="20240808 15:01:33.810" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.810"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.810" endtime="20240808 15:01:33.810"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.809" endtime="20240808 15:01:33.810"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.642) MAIN: Read Value Meter 3: 1']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.810" level="INFO">line: ['I (01:00:00.642) MAIN: Read Value Meter 3: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.810" endtime="20240808 15:01:33.810"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.811" level="INFO">${string} = ['I (01:00:00.642) MAIN: Read Value Meter 3: 1']</msg>
<status status="PASS" starttime="20240808 15:01:33.810" endtime="20240808 15:01:33.811"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.811" level="FAIL">'['I (01:00:00.642) MAIN: Read Value Meter 3: 1']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.811"/>
</kw>
<msg timestamp="20240808 15:01:33.811" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.811"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.811"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.810" endtime="20240808 15:01:33.811"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.647) MAIN: Read value Serialnumber: P00000001']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.811" level="INFO">line: ['I (01:00:00.647) MAIN: Read value Serialnumber: P00000001']</msg>
<status status="PASS" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.811"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.811" level="INFO">${string} = ['I (01:00:00.647) MAIN: Read value Serialnumber: P00000001']</msg>
<status status="PASS" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.811"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.811" level="FAIL">'['I (01:00:00.647) MAIN: Read value Serialnumber: P00000001']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.813"/>
</kw>
<msg timestamp="20240808 15:01:33.813" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.813"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.813" endtime="20240808 15:01:33.813"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.811" endtime="20240808 15:01:33.813"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.653) MAIN: Read value Partnumber: P12345678']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.813" level="INFO">line: ['I (01:00:00.653) MAIN: Read value Partnumber: P12345678']</msg>
<status status="PASS" starttime="20240808 15:01:33.813" endtime="20240808 15:01:33.813"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.813" level="INFO">${string} = ['I (01:00:00.653) MAIN: Read value Partnumber: P12345678']</msg>
<status status="PASS" starttime="20240808 15:01:33.813" endtime="20240808 15:01:33.814"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.814" level="FAIL">'['I (01:00:00.653) MAIN: Read value Partnumber: P12345678']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.814" endtime="20240808 15:01:33.814"/>
</kw>
<msg timestamp="20240808 15:01:33.814" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.814" endtime="20240808 15:01:33.814"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.814" endtime="20240808 15:01:33.814"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.813" endtime="20240808 15:01:33.814"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.659) MAIN: Nbr of connectors configured in NVS ram is 2']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.815" level="INFO">line: ['I (01:00:00.659) MAIN: Nbr of connectors configured in NVS ram is 2']</msg>
<status status="PASS" starttime="20240808 15:01:33.815" endtime="20240808 15:01:33.815"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.815" level="INFO">${string} = ['I (01:00:00.659) MAIN: Nbr of connectors configured in NVS ram is 2']</msg>
<status status="PASS" starttime="20240808 15:01:33.815" endtime="20240808 15:01:33.815"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.816" level="FAIL">'['I (01:00:00.659) MAIN: Nbr of connectors configured in NVS ram is 2']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.816" endtime="20240808 15:01:33.816"/>
</kw>
<msg timestamp="20240808 15:01:33.816" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.815" endtime="20240808 15:01:33.816"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.816" endtime="20240808 15:01:33.816"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.815" endtime="20240808 15:01:33.816"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.666) MAIN: Read value WebsocketPassword: ']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.816" level="INFO">line: ['I (01:00:00.666) MAIN: Read value WebsocketPassword: ']</msg>
<status status="PASS" starttime="20240808 15:01:33.816" endtime="20240808 15:01:33.816"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.816" level="INFO">${string} = ['I (01:00:00.666) MAIN: Read value WebsocketPassword: ']</msg>
<status status="PASS" starttime="20240808 15:01:33.816" endtime="20240808 15:01:33.816"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.817" level="FAIL">'['I (01:00:00.666) MAIN: Read value WebsocketPassword: ']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.817" endtime="20240808 15:01:33.817"/>
</kw>
<msg timestamp="20240808 15:01:33.817" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.817" endtime="20240808 15:01:33.817"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.817" endtime="20240808 15:01:33.817"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.816" endtime="20240808 15:01:33.817"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.672) MAIN: Read value Websocket URI: ws://192.168.0.83/charge_points']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.817" level="INFO">line: ['I (01:00:00.672) MAIN: Read value Websocket URI: ws://192.168.0.83/charge_points']</msg>
<status status="PASS" starttime="20240808 15:01:33.817" endtime="20240808 15:01:33.818"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.818" level="INFO">${string} = ['I (01:00:00.672) MAIN: Read value Websocket URI: ws://192.168.0.83/charge_points']</msg>
<status status="PASS" starttime="20240808 15:01:33.818" endtime="20240808 15:01:33.818"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240808 15:01:33.818" level="FAIL">'['I (01:00:00.672) MAIN: Read value Websocket URI: ws://192.168.0.83/charge_points']' does not match 'Main Fuse:'</msg>
<status status="FAIL" starttime="20240808 15:01:33.818" endtime="20240808 15:01:33.818"/>
</kw>
<msg timestamp="20240808 15:01:33.818" level="INFO">${match} = False</msg>
<status status="PASS" starttime="20240808 15:01:33.818" endtime="20240808 15:01:33.818"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:33.818" endtime="20240808 15:01:33.818"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.817" endtime="20240808 15:01:33.818"/>
</iter>
<iter>
<var name="${line}">['I (01:00:00.679) MAIN: Read Value Main Fuse: 20']</var>
<kw name="Log" library="BuiltIn">
<arg>line: ${line}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:33.819" level="INFO">line: ['I (01:00:00.679) MAIN: Read Value Main Fuse: 20']</msg>
<status status="PASS" starttime="20240808 15:01:33.818" endtime="20240808 15:01:33.819"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${string}</var>
<arg>${line}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.819" level="INFO">${string} = ['I (01:00:00.679) MAIN: Read Value Main Fuse: 20']</msg>
<status status="PASS" starttime="20240808 15:01:33.819" endtime="20240808 15:01:33.819"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${match}</var>
<arg>Should Match Regexp</arg>
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${string}</arg>
<arg>${pattern}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240808 15:01:33.819" endtime="20240808 15:01:33.819"/>
</kw>
<msg timestamp="20240808 15:01:33.819" level="INFO">${match} = True</msg>
<status status="PASS" starttime="20240808 15:01:33.819" endtime="20240808 15:01:33.819"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${match} == ${true}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20240808 15:01:33.819" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240808 15:01:33.819" endtime="20240808 15:01:33.819"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.818" endtime="20240808 15:01:33.819"/>
</iter>
<status status="PASS" starttime="20240808 15:01:33.735" endtime="20240808 15:01:33.819"/>
</for>
<msg timestamp="20240808 15:01:33.819" level="INFO">${lines} = ['I (01:00:00.679) MAIN: Read Value Main Fuse: 20']</msg>
<status status="PASS" starttime="20240808 15:01:33.734" endtime="20240808 15:01:33.820"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${line}</var>
<arg>${lines}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240808 15:01:33.820" level="INFO">${line} = ['I (01:00:00.679) MAIN: Read Value Main Fuse: 20']</msg>
<status status="PASS" starttime="20240808 15:01:33.820" endtime="20240808 15:01:33.820"/>
</kw>
<kw name="Get Substring" library="String">
<var>${Fuse_Value}</var>
<arg>${line}</arg>
<arg>-5</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240808 15:01:33.820" level="INFO">${Fuse_Value} =  20</msg>
<status status="PASS" starttime="20240808 15:01:33.820" endtime="20240808 15:01:33.820"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Fuse_int}</var>
<arg>isinstance(${Fuse_Value}, int)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:01:33.820" level="INFO">${Fuse_int} = True</msg>
<status status="PASS" starttime="20240808 15:01:33.820" endtime="20240808 15:01:33.820"/>
</kw>
<msg timestamp="20240808 15:01:33.820" level="INFO">${FUSE} =  20</msg>
<status status="PASS" starttime="20240808 15:01:33.733" endtime="20240808 15:01:33.820"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${FUSEOVER}</var>
<arg>${FUSE} + 3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:01:33.820" level="INFO">${FUSEOVER} = 23</msg>
<status status="PASS" starttime="20240808 15:01:33.820" endtime="20240808 15:01:33.820"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>15</value>
<iter>
<var name="${index}">1</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>${FUSEOVER}</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:01:36.620" level="INFO">Listening on COM9...
Sending: 23
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:01:36.620" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:01:33.821" endtime="20240808 15:01:36.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:37.620" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:36.620" endtime="20240808 15:01:37.620"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:01:40.223" level="INFO">Listening on COM9...
Sending: 19
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:01:40.223" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:01:37.621" endtime="20240808 15:01:40.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:40.224" level="INFO">Iteration test nr:1</msg>
<status status="PASS" starttime="20240808 15:01:40.223" endtime="20240808 15:01:40.224"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:01:41.877" level="INFO">${Duty_Cycle_1} = 22.84</msg>
<status status="PASS" starttime="20240808 15:01:40.224" endtime="20240808 15:01:41.877"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:01:43.525" level="INFO">${Duty_Cycle_2} = 22.8</msg>
<status status="PASS" starttime="20240808 15:01:41.878" endtime="20240808 15:01:43.525"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:01:43.526" level="INFO">${Duty_Cycle_A1} = 13.703999999999999</msg>
<status status="PASS" starttime="20240808 15:01:43.526" endtime="20240808 15:01:43.526"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:01:43.526" level="INFO">${Duty_Cycle_A2} = 13.68</msg>
<status status="PASS" starttime="20240808 15:01:43.526" endtime="20240808 15:01:43.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:43.526" level="INFO">13.703999999999999</msg>
<status status="PASS" starttime="20240808 15:01:43.526" endtime="20240808 15:01:43.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:43.527" level="INFO">13.68</msg>
<status status="PASS" starttime="20240808 15:01:43.526" endtime="20240808 15:01:43.527"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} == 60.0 or ${Duty_Cycle_A2} == 60.0</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:43.527" endtime="20240808 15:01:43.527"/>
</kw>
<if>
<branch type="IF" condition="${index} == 14">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:01:43.527" endtime="20240808 15:01:43.527"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:01:43.527" endtime="20240808 15:01:43.527"/>
</branch>
<status status="PASS" starttime="20240808 15:01:43.527" endtime="20240808 15:01:43.527"/>
</if>
<status status="PASS" starttime="20240808 15:01:33.821" endtime="20240808 15:01:43.527"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>${FUSEOVER}</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:01:46.385" level="INFO">Listening on COM9...
Sending: 23
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:01:46.385" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:01:43.527" endtime="20240808 15:01:46.385"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:47.385" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:46.385" endtime="20240808 15:01:47.385"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:01:50.001" level="INFO">Listening on COM9...
Sending: 19
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:01:50.001" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:01:47.385" endtime="20240808 15:01:50.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:50.001" level="INFO">Iteration test nr:2</msg>
<status status="PASS" starttime="20240808 15:01:50.001" endtime="20240808 15:01:50.001"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:01:51.650" level="INFO">${Duty_Cycle_1} = 19.68</msg>
<status status="PASS" starttime="20240808 15:01:50.001" endtime="20240808 15:01:51.650"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:01:53.307" level="INFO">${Duty_Cycle_2} = 19.16</msg>
<status status="PASS" starttime="20240808 15:01:51.650" endtime="20240808 15:01:53.307"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:01:53.308" level="INFO">${Duty_Cycle_A1} = 11.808</msg>
<status status="PASS" starttime="20240808 15:01:53.307" endtime="20240808 15:01:53.308"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:01:53.308" level="INFO">${Duty_Cycle_A2} = 11.496</msg>
<status status="PASS" starttime="20240808 15:01:53.308" endtime="20240808 15:01:53.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:53.308" level="INFO">11.808</msg>
<status status="PASS" starttime="20240808 15:01:53.308" endtime="20240808 15:01:53.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:53.308" level="INFO">11.496</msg>
<status status="PASS" starttime="20240808 15:01:53.308" endtime="20240808 15:01:53.308"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} == 60.0 or ${Duty_Cycle_A2} == 60.0</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:01:53.308" endtime="20240808 15:01:53.309"/>
</kw>
<if>
<branch type="IF" condition="${index} == 14">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:01:53.309" endtime="20240808 15:01:53.309"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:01:53.309" endtime="20240808 15:01:53.309"/>
</branch>
<status status="PASS" starttime="20240808 15:01:53.309" endtime="20240808 15:01:53.309"/>
</if>
<status status="PASS" starttime="20240808 15:01:43.527" endtime="20240808 15:01:53.309"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>${FUSEOVER}</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:01:56.143" level="INFO">Listening on COM9...
Sending: 23
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:01:56.143" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:01:53.309" endtime="20240808 15:01:56.143"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:01:57.144" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:01:56.143" endtime="20240808 15:01:57.144"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:01:59.772" level="INFO">Listening on COM9...
Sending: 19
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:01:59.772" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:01:57.144" endtime="20240808 15:01:59.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:01:59.772" level="INFO">Iteration test nr:3</msg>
<status status="PASS" starttime="20240808 15:01:59.772" endtime="20240808 15:01:59.772"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:01.426" level="INFO">${Duty_Cycle_1} = 16.520000000000003</msg>
<status status="PASS" starttime="20240808 15:01:59.772" endtime="20240808 15:02:01.426"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:03.086" level="INFO">${Duty_Cycle_2} = 16.919999999999998</msg>
<status status="PASS" starttime="20240808 15:02:01.426" endtime="20240808 15:02:03.086"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:03.087" level="INFO">${Duty_Cycle_A1} = 9.912</msg>
<status status="PASS" starttime="20240808 15:02:03.086" endtime="20240808 15:02:03.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:03.088" level="INFO">${Duty_Cycle_A2} = 10.152</msg>
<status status="PASS" starttime="20240808 15:02:03.087" endtime="20240808 15:02:03.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:03.088" level="INFO">9.912</msg>
<status status="PASS" starttime="20240808 15:02:03.088" endtime="20240808 15:02:03.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:03.088" level="INFO">10.152</msg>
<status status="PASS" starttime="20240808 15:02:03.088" endtime="20240808 15:02:03.088"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} == 60.0 or ${Duty_Cycle_A2} == 60.0</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:02:03.088" endtime="20240808 15:02:03.088"/>
</kw>
<if>
<branch type="IF" condition="${index} == 14">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:03.089" endtime="20240808 15:02:03.089"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:03.088" endtime="20240808 15:02:03.089"/>
</branch>
<status status="PASS" starttime="20240808 15:02:03.088" endtime="20240808 15:02:03.089"/>
</if>
<status status="PASS" starttime="20240808 15:01:53.309" endtime="20240808 15:02:03.089"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>${FUSEOVER}</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:05.937" level="INFO">Listening on COM9...
Sending: 23
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:05.937" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:03.089" endtime="20240808 15:02:05.937"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:02:06.938" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:02:05.937" endtime="20240808 15:02:06.938"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:09.532" level="INFO">Listening on COM9...
Sending: 19
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:09.532" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:06.938" endtime="20240808 15:02:09.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:09.532" level="INFO">Iteration test nr:4</msg>
<status status="PASS" starttime="20240808 15:02:09.532" endtime="20240808 15:02:09.532"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:11.182" level="INFO">${Duty_Cycle_1} = 13.0</msg>
<status status="PASS" starttime="20240808 15:02:09.532" endtime="20240808 15:02:11.182"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:12.822" level="INFO">${Duty_Cycle_2} = 13.4</msg>
<status status="PASS" starttime="20240808 15:02:11.182" endtime="20240808 15:02:12.822"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:12.822" level="INFO">${Duty_Cycle_A1} = 7.8</msg>
<status status="PASS" starttime="20240808 15:02:12.822" endtime="20240808 15:02:12.822"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:12.823" level="INFO">${Duty_Cycle_A2} = 8.04</msg>
<status status="PASS" starttime="20240808 15:02:12.822" endtime="20240808 15:02:12.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:12.823" level="INFO">7.8</msg>
<status status="PASS" starttime="20240808 15:02:12.823" endtime="20240808 15:02:12.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:12.823" level="INFO">8.04</msg>
<status status="PASS" starttime="20240808 15:02:12.823" endtime="20240808 15:02:12.823"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} == 60.0 or ${Duty_Cycle_A2} == 60.0</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:02:12.823" endtime="20240808 15:02:12.823"/>
</kw>
<if>
<branch type="IF" condition="${index} == 14">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:12.824" endtime="20240808 15:02:12.824"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:12.824" endtime="20240808 15:02:12.824"/>
</branch>
<status status="PASS" starttime="20240808 15:02:12.823" endtime="20240808 15:02:12.824"/>
</if>
<status status="PASS" starttime="20240808 15:02:03.089" endtime="20240808 15:02:12.824"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>${FUSEOVER}</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:15.681" level="INFO">Listening on COM9...
Sending: 23
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
['86', 'a2', '00', '01']
Sending  23 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:15.681" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:12.824" endtime="20240808 15:02:15.681"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:02:16.681" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:02:15.681" endtime="20240808 15:02:16.681"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100002</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:19.301" level="INFO">Listening on COM9...
Sending: 19
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
['86', 'a2', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:19.301" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:16.681" endtime="20240808 15:02:19.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:19.302" level="INFO">Iteration test nr:5</msg>
<status status="PASS" starttime="20240808 15:02:19.302" endtime="20240808 15:02:19.302"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:20.933" level="INFO">${Duty_Cycle_1} = 11.600000000000001</msg>
<status status="PASS" starttime="20240808 15:02:19.302" endtime="20240808 15:02:20.934"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:22.586" level="INFO">${Duty_Cycle_2} = 100.0</msg>
<status status="PASS" starttime="20240808 15:02:20.934" endtime="20240808 15:02:22.586"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:22.586" level="INFO">${Duty_Cycle_A1} = 6.960000000000001</msg>
<status status="PASS" starttime="20240808 15:02:22.586" endtime="20240808 15:02:22.586"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:22.586" level="INFO">${Duty_Cycle_A2} = 60.0</msg>
<status status="PASS" starttime="20240808 15:02:22.586" endtime="20240808 15:02:22.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:22.587" level="INFO">6.960000000000001</msg>
<status status="PASS" starttime="20240808 15:02:22.586" endtime="20240808 15:02:22.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:22.587" level="INFO">60.0</msg>
<status status="PASS" starttime="20240808 15:02:22.587" endtime="20240808 15:02:22.587"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} == 60.0 or ${Duty_Cycle_A2} == 60.0</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20240808 15:02:22.587" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240808 15:02:22.587" endtime="20240808 15:02:22.587"/>
</kw>
<if>
<branch type="IF" condition="${index} == 14">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:22.587" endtime="20240808 15:02:22.587"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:22.587" endtime="20240808 15:02:22.587"/>
</branch>
<status status="NOT RUN" starttime="20240808 15:02:22.587" endtime="20240808 15:02:22.587"/>
</if>
<status status="PASS" starttime="20240808 15:02:12.824" endtime="20240808 15:02:22.587"/>
</iter>
<status status="PASS" starttime="20240808 15:01:33.820" endtime="20240808 15:02:22.587"/>
</for>
<status status="PASS" starttime="20240808 15:01:33.733" endtime="20240808 15:02:22.587"/>
</kw>
<kw name="Check Duty Cycle LoadBalancing" library="State_Cycle_Test_Port_1">
<doc>Checks Duty Cycle Back To Normal</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>False</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:22.589" level="INFO">${LoadBalance} = False</msg>
<status status="PASS" starttime="20240808 15:02:22.588" endtime="20240808 15:02:22.589"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>20</value>
<iter>
<var name="${index}">1</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:25.448" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:25.448" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:22.589" endtime="20240808 15:02:25.448"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:28.599" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:28.599" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:25.448" endtime="20240808 15:02:28.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:28.599" level="INFO">Iteration test nr:1</msg>
<status status="PASS" starttime="20240808 15:02:28.599" endtime="20240808 15:02:28.599"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:30.239" level="INFO">${Duty_Cycle_1} = 14.52</msg>
<status status="PASS" starttime="20240808 15:02:28.599" endtime="20240808 15:02:30.239"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:30.240" level="INFO">${Duty_Cycle_A1} = 8.712</msg>
<status status="PASS" starttime="20240808 15:02:30.239" endtime="20240808 15:02:30.240"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:31.866" level="INFO">${Duty_Cycle_2} = 100.0</msg>
<status status="PASS" starttime="20240808 15:02:30.240" endtime="20240808 15:02:31.866"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:31.866" level="INFO">${Duty_Cycle_A2} = 60.0</msg>
<status status="PASS" starttime="20240808 15:02:31.866" endtime="20240808 15:02:31.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:31.866" level="INFO">8.712</msg>
<status status="PASS" starttime="20240808 15:02:31.866" endtime="20240808 15:02:31.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:31.866" level="INFO">60.0</msg>
<status status="PASS" starttime="20240808 15:02:31.866" endtime="20240808 15:02:31.867"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:31.867" level="INFO">${LoadBalance} = True</msg>
<status status="PASS" starttime="20240808 15:02:31.867" endtime="20240808 15:02:31.867"/>
</kw>
<status status="PASS" starttime="20240808 15:02:31.867" endtime="20240808 15:02:31.867"/>
</branch>
<status status="PASS" starttime="20240808 15:02:31.867" endtime="20240808 15:02:31.867"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:02:31.867" endtime="20240808 15:02:31.867"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:31.868" endtime="20240808 15:02:31.868"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:31.867" endtime="20240808 15:02:31.868"/>
</branch>
<status status="PASS" starttime="20240808 15:02:31.867" endtime="20240808 15:02:31.868"/>
</if>
<status status="PASS" starttime="20240808 15:02:22.589" endtime="20240808 15:02:31.868"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:34.741" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:34.741" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:31.868" endtime="20240808 15:02:34.741"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:37.868" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:37.868" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:34.741" endtime="20240808 15:02:37.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:37.869" level="INFO">Iteration test nr:2</msg>
<status status="PASS" starttime="20240808 15:02:37.868" endtime="20240808 15:02:37.869"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:39.514" level="INFO">${Duty_Cycle_1} = 11.76</msg>
<status status="PASS" starttime="20240808 15:02:37.869" endtime="20240808 15:02:39.514"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:39.515" level="INFO">${Duty_Cycle_A1} = 7.056</msg>
<status status="PASS" starttime="20240808 15:02:39.514" endtime="20240808 15:02:39.515"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:41.159" level="INFO">${Duty_Cycle_2} = 11.200000000000001</msg>
<status status="PASS" starttime="20240808 15:02:39.515" endtime="20240808 15:02:41.159"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:41.159" level="INFO">${Duty_Cycle_A2} = 6.720000000000001</msg>
<status status="PASS" starttime="20240808 15:02:41.159" endtime="20240808 15:02:41.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:41.160" level="INFO">7.056</msg>
<status status="PASS" starttime="20240808 15:02:41.159" endtime="20240808 15:02:41.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:41.160" level="INFO">6.720000000000001</msg>
<status status="PASS" starttime="20240808 15:02:41.160" endtime="20240808 15:02:41.160"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:02:41.160" endtime="20240808 15:02:41.160"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:41.160" endtime="20240808 15:02:41.160"/>
</branch>
<status status="PASS" starttime="20240808 15:02:41.160" endtime="20240808 15:02:41.160"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:02:41.160" endtime="20240808 15:02:41.161"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:41.161" endtime="20240808 15:02:41.161"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:41.161" endtime="20240808 15:02:41.161"/>
</branch>
<status status="PASS" starttime="20240808 15:02:41.161" endtime="20240808 15:02:41.161"/>
</if>
<status status="PASS" starttime="20240808 15:02:31.868" endtime="20240808 15:02:41.161"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:44.026" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:44.026" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:41.161" endtime="20240808 15:02:44.026"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:47.183" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:47.183" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:44.026" endtime="20240808 15:02:47.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:47.184" level="INFO">Iteration test nr:3</msg>
<status status="PASS" starttime="20240808 15:02:47.184" endtime="20240808 15:02:47.184"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:48.829" level="INFO">${Duty_Cycle_1} = 14.879999999999999</msg>
<status status="PASS" starttime="20240808 15:02:47.184" endtime="20240808 15:02:48.829"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:48.830" level="INFO">${Duty_Cycle_A1} = 8.927999999999999</msg>
<status status="PASS" starttime="20240808 15:02:48.829" endtime="20240808 15:02:48.830"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:50.470" level="INFO">${Duty_Cycle_2} = 14.879999999999999</msg>
<status status="PASS" starttime="20240808 15:02:48.830" endtime="20240808 15:02:50.470"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:50.470" level="INFO">${Duty_Cycle_A2} = 8.927999999999999</msg>
<status status="PASS" starttime="20240808 15:02:50.470" endtime="20240808 15:02:50.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:50.470" level="INFO">8.927999999999999</msg>
<status status="PASS" starttime="20240808 15:02:50.470" endtime="20240808 15:02:50.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:50.470" level="INFO">8.927999999999999</msg>
<status status="PASS" starttime="20240808 15:02:50.470" endtime="20240808 15:02:50.470"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:02:50.471" endtime="20240808 15:02:50.471"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:50.470" endtime="20240808 15:02:50.471"/>
</branch>
<status status="PASS" starttime="20240808 15:02:50.470" endtime="20240808 15:02:50.471"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:02:50.471" endtime="20240808 15:02:50.471"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:50.471" endtime="20240808 15:02:50.471"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:50.471" endtime="20240808 15:02:50.471"/>
</branch>
<status status="PASS" starttime="20240808 15:02:50.471" endtime="20240808 15:02:50.471"/>
</if>
<status status="PASS" starttime="20240808 15:02:41.161" endtime="20240808 15:02:50.471"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:53.307" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:53.307" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:50.471" endtime="20240808 15:02:53.307"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:02:56.449" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:02:56.450" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:53.307" endtime="20240808 15:02:56.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:56.451" level="INFO">Iteration test nr:4</msg>
<status status="PASS" starttime="20240808 15:02:56.450" endtime="20240808 15:02:56.451"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:02:58.090" level="INFO">${Duty_Cycle_1} = 18.92</msg>
<status status="PASS" starttime="20240808 15:02:56.451" endtime="20240808 15:02:58.090"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:58.091" level="INFO">${Duty_Cycle_A1} = 11.352</msg>
<status status="PASS" starttime="20240808 15:02:58.090" endtime="20240808 15:02:58.091"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:02:59.729" level="INFO">${Duty_Cycle_2} = 17.68</msg>
<status status="PASS" starttime="20240808 15:02:58.091" endtime="20240808 15:02:59.729"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:02:59.729" level="INFO">${Duty_Cycle_A2} = 10.607999999999999</msg>
<status status="PASS" starttime="20240808 15:02:59.729" endtime="20240808 15:02:59.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:59.729" level="INFO">11.352</msg>
<status status="PASS" starttime="20240808 15:02:59.729" endtime="20240808 15:02:59.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:02:59.730" level="INFO">10.607999999999999</msg>
<status status="PASS" starttime="20240808 15:02:59.729" endtime="20240808 15:02:59.730"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:02:59.730" endtime="20240808 15:02:59.730"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:59.730" endtime="20240808 15:02:59.730"/>
</branch>
<status status="PASS" starttime="20240808 15:02:59.730" endtime="20240808 15:02:59.730"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:02:59.730" endtime="20240808 15:02:59.730"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:02:59.731" endtime="20240808 15:02:59.731"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:02:59.730" endtime="20240808 15:02:59.731"/>
</branch>
<status status="PASS" starttime="20240808 15:02:59.730" endtime="20240808 15:02:59.731"/>
</if>
<status status="PASS" starttime="20240808 15:02:50.471" endtime="20240808 15:02:59.731"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:02.583" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:02.583" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:02:59.731" endtime="20240808 15:03:02.583"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:05.757" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:05.757" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:02.583" endtime="20240808 15:03:05.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:05.758" level="INFO">Iteration test nr:5</msg>
<status status="PASS" starttime="20240808 15:03:05.758" endtime="20240808 15:03:05.758"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:03:07.401" level="INFO">${Duty_Cycle_1} = 21.36</msg>
<status status="PASS" starttime="20240808 15:03:05.758" endtime="20240808 15:03:07.401"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:07.401" level="INFO">${Duty_Cycle_A1} = 12.815999999999999</msg>
<status status="PASS" starttime="20240808 15:03:07.401" endtime="20240808 15:03:07.401"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:03:09.048" level="INFO">${Duty_Cycle_2} = 22.16</msg>
<status status="PASS" starttime="20240808 15:03:07.401" endtime="20240808 15:03:09.048"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:09.049" level="INFO">${Duty_Cycle_A2} = 13.296</msg>
<status status="PASS" starttime="20240808 15:03:09.049" endtime="20240808 15:03:09.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:09.049" level="INFO">12.815999999999999</msg>
<status status="PASS" starttime="20240808 15:03:09.049" endtime="20240808 15:03:09.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:09.050" level="INFO">13.296</msg>
<status status="PASS" starttime="20240808 15:03:09.049" endtime="20240808 15:03:09.050"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</branch>
<status status="PASS" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</branch>
<status status="PASS" starttime="20240808 15:03:09.050" endtime="20240808 15:03:09.050"/>
</if>
<status status="PASS" starttime="20240808 15:02:59.731" endtime="20240808 15:03:09.050"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:11.894" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:11.894" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:09.050" endtime="20240808 15:03:11.894"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:15.040" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:15.040" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:11.894" endtime="20240808 15:03:15.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:15.041" level="INFO">Iteration test nr:6</msg>
<status status="PASS" starttime="20240808 15:03:15.040" endtime="20240808 15:03:15.041"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:03:16.669" level="INFO">${Duty_Cycle_1} = 21.959999999999997</msg>
<status status="PASS" starttime="20240808 15:03:15.041" endtime="20240808 15:03:16.669"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:16.670" level="INFO">${Duty_Cycle_A1} = 13.175999999999998</msg>
<status status="PASS" starttime="20240808 15:03:16.669" endtime="20240808 15:03:16.670"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:03:18.305" level="INFO">${Duty_Cycle_2} = 21.36</msg>
<status status="PASS" starttime="20240808 15:03:16.670" endtime="20240808 15:03:18.305"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:18.305" level="INFO">${Duty_Cycle_A2} = 12.815999999999999</msg>
<status status="PASS" starttime="20240808 15:03:18.305" endtime="20240808 15:03:18.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:18.305" level="INFO">13.175999999999998</msg>
<status status="PASS" starttime="20240808 15:03:18.305" endtime="20240808 15:03:18.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:18.305" level="INFO">12.815999999999999</msg>
<status status="PASS" starttime="20240808 15:03:18.305" endtime="20240808 15:03:18.305"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:03:18.305" endtime="20240808 15:03:18.307"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:18.305" endtime="20240808 15:03:18.307"/>
</branch>
<status status="PASS" starttime="20240808 15:03:18.305" endtime="20240808 15:03:18.307"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:03:18.307" endtime="20240808 15:03:18.307"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:03:18.307" endtime="20240808 15:03:18.307"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:18.307" endtime="20240808 15:03:18.307"/>
</branch>
<status status="PASS" starttime="20240808 15:03:18.307" endtime="20240808 15:03:18.307"/>
</if>
<status status="PASS" starttime="20240808 15:03:09.050" endtime="20240808 15:03:18.307"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:21.185" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:21.185" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:18.307" endtime="20240808 15:03:21.185"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:24.316" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:24.316" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:21.185" endtime="20240808 15:03:24.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:24.317" level="INFO">Iteration test nr:7</msg>
<status status="PASS" starttime="20240808 15:03:24.316" endtime="20240808 15:03:24.317"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:03:25.960" level="INFO">${Duty_Cycle_1} = 21.279999999999998</msg>
<status status="PASS" starttime="20240808 15:03:24.317" endtime="20240808 15:03:25.960"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:25.961" level="INFO">${Duty_Cycle_A1} = 12.767999999999999</msg>
<status status="PASS" starttime="20240808 15:03:25.960" endtime="20240808 15:03:25.961"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:03:27.600" level="INFO">${Duty_Cycle_2} = 21.84</msg>
<status status="PASS" starttime="20240808 15:03:25.961" endtime="20240808 15:03:27.600"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:27.600" level="INFO">${Duty_Cycle_A2} = 13.104</msg>
<status status="PASS" starttime="20240808 15:03:27.600" endtime="20240808 15:03:27.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:27.600" level="INFO">12.767999999999999</msg>
<status status="PASS" starttime="20240808 15:03:27.600" endtime="20240808 15:03:27.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:27.601" level="INFO">13.104</msg>
<status status="PASS" starttime="20240808 15:03:27.600" endtime="20240808 15:03:27.601"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:03:27.601" endtime="20240808 15:03:27.601"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:27.601" endtime="20240808 15:03:27.601"/>
</branch>
<status status="PASS" starttime="20240808 15:03:27.601" endtime="20240808 15:03:27.601"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:03:27.601" endtime="20240808 15:03:27.601"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:03:27.602" endtime="20240808 15:03:27.602"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:27.601" endtime="20240808 15:03:27.602"/>
</branch>
<status status="PASS" starttime="20240808 15:03:27.601" endtime="20240808 15:03:27.602"/>
</if>
<status status="PASS" starttime="20240808 15:03:18.307" endtime="20240808 15:03:27.602"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:30.470" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:30.470" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:27.602" endtime="20240808 15:03:30.470"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:33.627" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:33.627" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:30.470" endtime="20240808 15:03:33.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:33.627" level="INFO">Iteration test nr:8</msg>
<status status="PASS" starttime="20240808 15:03:33.627" endtime="20240808 15:03:33.627"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:03:35.278" level="INFO">${Duty_Cycle_1} = 24.6</msg>
<status status="PASS" starttime="20240808 15:03:33.627" endtime="20240808 15:03:35.278"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:35.278" level="INFO">${Duty_Cycle_A1} = 14.76</msg>
<status status="PASS" starttime="20240808 15:03:35.278" endtime="20240808 15:03:35.278"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:03:36.922" level="INFO">${Duty_Cycle_2} = 25.240000000000002</msg>
<status status="PASS" starttime="20240808 15:03:35.278" endtime="20240808 15:03:36.922"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:36.923" level="INFO">${Duty_Cycle_A2} = 15.144</msg>
<status status="PASS" starttime="20240808 15:03:36.922" endtime="20240808 15:03:36.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:36.923" level="INFO">14.76</msg>
<status status="PASS" starttime="20240808 15:03:36.923" endtime="20240808 15:03:36.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:36.923" level="INFO">15.144</msg>
<status status="PASS" starttime="20240808 15:03:36.923" endtime="20240808 15:03:36.923"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:03:36.923" endtime="20240808 15:03:36.924"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:36.923" endtime="20240808 15:03:36.924"/>
</branch>
<status status="PASS" starttime="20240808 15:03:36.923" endtime="20240808 15:03:36.924"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:03:36.924" endtime="20240808 15:03:36.924"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:03:36.924" endtime="20240808 15:03:36.924"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:36.924" endtime="20240808 15:03:36.924"/>
</branch>
<status status="PASS" starttime="20240808 15:03:36.924" endtime="20240808 15:03:36.924"/>
</if>
<status status="PASS" starttime="20240808 15:03:27.602" endtime="20240808 15:03:36.924"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>15</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:39.768" level="INFO">Listening on COM9...
Sending: 15
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
['86', 'a3', '00', '01']
Sending  15 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:39.768" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:36.924" endtime="20240808 15:03:39.768"/>
</kw>
<kw name="Receive Serial Data" library="Elmatare">
<var>${CLOSED}</var>
<arg>${Serial_COM_Port}</arg>
<arg>${BAUDRATE}</arg>
<arg>19</arg>
<arg>100003</arg>
<arg>200</arg>
<msg timestamp="20240808 15:03:42.942" level="INFO">Listening on COM9...
Sending: 19
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
['86', 'a3', '00', '01']
Sending  19 A  to L1
Port Closed</msg>
<msg timestamp="20240808 15:03:42.942" level="INFO">${CLOSED} = True</msg>
<status status="PASS" starttime="20240808 15:03:39.768" endtime="20240808 15:03:42.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Iteration test nr:${index}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:42.942" level="INFO">Iteration test nr:9</msg>
<status status="PASS" starttime="20240808 15:03:42.942" endtime="20240808 15:03:42.942"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_1}</var>
<arg>${Channel_1}</arg>
<msg timestamp="20240808 15:03:44.582" level="INFO">${Duty_Cycle_1} = 27.24</msg>
<status status="PASS" starttime="20240808 15:03:42.943" endtime="20240808 15:03:44.582"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A1}</var>
<arg>${Duty_Cycle_1} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:44.583" level="INFO">${Duty_Cycle_A1} = 16.343999999999998</msg>
<status status="PASS" starttime="20240808 15:03:44.582" endtime="20240808 15:03:44.583"/>
</kw>
<kw name="Measure Pwm Duty Cycle" library="main">
<var>${Duty_Cycle_2}</var>
<arg>2</arg>
<msg timestamp="20240808 15:03:46.230" level="INFO">${Duty_Cycle_2} = 26.840000000000003</msg>
<status status="PASS" starttime="20240808 15:03:44.583" endtime="20240808 15:03:46.230"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Duty_Cycle_A2}</var>
<arg>${Duty_Cycle_2} * 0.6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240808 15:03:46.230" level="INFO">${Duty_Cycle_A2} = 16.104000000000003</msg>
<status status="PASS" starttime="20240808 15:03:46.230" endtime="20240808 15:03:46.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:46.230" level="INFO">16.343999999999998</msg>
<status status="PASS" starttime="20240808 15:03:46.230" endtime="20240808 15:03:46.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Duty_Cycle_A2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:46.231" level="INFO">16.104000000000003</msg>
<status status="PASS" starttime="20240808 15:03:46.230" endtime="20240808 15:03:46.231"/>
</kw>
<if>
<branch type="IF" condition="${Duty_Cycle_A1} == 60.0 and ${Duty_Cycle_A2} != 60.0 or ${Duty_Cycle_A1} != 60.0 and ${Duty_Cycle_A2} == 60.0">
<kw name="Evaluate" library="BuiltIn">
<var>${LoadBalance}</var>
<arg>True</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240808 15:03:46.232" endtime="20240808 15:03:46.232"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:46.231" endtime="20240808 15:03:46.232"/>
</branch>
<status status="PASS" starttime="20240808 15:03:46.231" endtime="20240808 15:03:46.232"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Duty_Cycle_A1} &lt; 17 and ${Duty_Cycle_A2} &lt; 17 and ${Duty_Cycle_A1} &gt; 15 and ${Duty_Cycle_A2} &gt; 15 and ${LoadBalance} == True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20240808 15:03:46.233" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240808 15:03:46.232" endtime="20240808 15:03:46.233"/>
</kw>
<if>
<branch type="IF" condition="${index} == 20">
<kw name="Fail" library="BuiltIn">
<arg>Took to long failing test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240808 15:03:46.233" endtime="20240808 15:03:46.233"/>
</kw>
<status status="NOT RUN" starttime="20240808 15:03:46.233" endtime="20240808 15:03:46.233"/>
</branch>
<status status="NOT RUN" starttime="20240808 15:03:46.233" endtime="20240808 15:03:46.233"/>
</if>
<status status="PASS" starttime="20240808 15:03:36.924" endtime="20240808 15:03:46.233"/>
</iter>
<status status="PASS" starttime="20240808 15:02:22.589" endtime="20240808 15:03:46.233"/>
</for>
<status status="PASS" starttime="20240808 15:02:22.588" endtime="20240808 15:03:46.233"/>
</kw>
<status status="PASS" starttime="20240808 15:01:33.731" endtime="20240808 15:03:46.234"/>
</test>
<test id="s1-t4" name="Stop Charging Cycle Port 1 and Port 2" line="59">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${PREV_TEST_STATUS}' != 'PASS'</arg>
<arg>Fail</arg>
<arg>Previous test case failed.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:03:46.235" endtime="20240808 15:03:46.235"/>
</kw>
<kw name="Close State Car Charging" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the CP car charging is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_3}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:03:46.236" endtime="20240808 15:03:46.240"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:03:46.331" level="INFO">${data} = [0;32mI (01:02:55.732) CHARGER: State 1: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:46.240" endtime="20240808 15:03:46.331"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:47.332" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:03:46.332" endtime="20240808 15:03:47.332"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:03:47.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:03:47.332" endtime="20240808 15:03:47.332"/>
</kw>
<msg timestamp="20240808 15:03:47.332" level="INFO">${data} = [0;32mI (01:02:55.732) CHARGER: State 1: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:46.236" endtime="20240808 15:03:47.334"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_car_req}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:03:47.359" level="INFO">${PP} = 6.675340466380597</msg>
<status status="PASS" starttime="20240808 15:03:47.334" endtime="20240808 15:03:47.359"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:03:47.421" level="INFO">${CP} = 6.0442450320047</msg>
<status status="PASS" starttime="20240808 15:03:47.359" endtime="20240808 15:03:47.421"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:03:47.422" endtime="20240808 15:03:47.422"/>
</kw>
<status status="PASS" starttime="20240808 15:03:47.421" endtime="20240808 15:03:47.422"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:47.422" endtime="20240808 15:03:47.422"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:47.423" endtime="20240808 15:03:47.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:47.423" endtime="20240808 15:03:47.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:47.423" endtime="20240808 15:03:47.423"/>
</kw>
<status status="PASS" starttime="20240808 15:03:47.334" endtime="20240808 15:03:47.423"/>
</kw>
<status status="PASS" starttime="20240808 15:03:46.236" endtime="20240808 15:03:47.423"/>
</kw>
<kw name="Close State Car Charging" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the CP car charging is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_7}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:03:47.425" endtime="20240808 15:03:47.430"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:03:47.493" level="INFO">${data} = [0;32mI (01:02:56.932) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:47.430" endtime="20240808 15:03:47.493"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:49.493" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:03:47.493" endtime="20240808 15:03:49.493"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:03:49.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:03:49.493" endtime="20240808 15:03:49.493"/>
</kw>
<msg timestamp="20240808 15:03:49.493" level="INFO">${data} = [0;32mI (01:02:56.932) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:47.424" endtime="20240808 15:03:49.493"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_car_req}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:03:49.516" level="INFO">${PP} = 6.894794989394419</msg>
<status status="PASS" starttime="20240808 15:03:49.494" endtime="20240808 15:03:49.516"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:03:49.596" level="INFO">${CP} = 5.86092855641653</msg>
<status status="PASS" starttime="20240808 15:03:49.516" endtime="20240808 15:03:49.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:49.597" level="INFO">6.894794989394419</msg>
<status status="PASS" starttime="20240808 15:03:49.597" endtime="20240808 15:03:49.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:49.597" level="INFO">5.86092855641653</msg>
<status status="PASS" starttime="20240808 15:03:49.597" endtime="20240808 15:03:49.598"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:50.598" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:03:49.598" endtime="20240808 15:03:50.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:03:50.598" endtime="20240808 15:03:50.598"/>
</kw>
<status status="PASS" starttime="20240808 15:03:50.598" endtime="20240808 15:03:50.598"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:50.598" endtime="20240808 15:03:50.598"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:50.600" endtime="20240808 15:03:50.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:50.600" level="INFO">[0;32mI (01:02:56.932) CHARGER: State 2: CH_STATE_CAR_REQ_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:50.600" endtime="20240808 15:03:50.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:50.600" endtime="20240808 15:03:50.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:50.600" endtime="20240808 15:03:50.600"/>
</kw>
<status status="PASS" starttime="20240808 15:03:49.493" endtime="20240808 15:03:50.601"/>
</kw>
<status status="PASS" starttime="20240808 15:03:47.424" endtime="20240808 15:03:50.601"/>
</kw>
<kw name="Close State Car Requiring Power" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the CP car power request is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_2}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:03:50.602" endtime="20240808 15:03:50.606"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:03:50.740" level="INFO">${data} = [0;32mI (01:03:00.181) CHARGER: State 1: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:50.606" endtime="20240808 15:03:50.740"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:51.742" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:03:50.741" endtime="20240808 15:03:51.742"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:03:51.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:03:51.742" endtime="20240808 15:03:51.742"/>
</kw>
<msg timestamp="20240808 15:03:51.743" level="INFO">${data} = [0;32mI (01:03:00.181) CHARGER: State 1: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:50.601" endtime="20240808 15:03:51.743"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_ch_PWR}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:03:51.766" level="INFO">${PP} = 6.7058932603833075</msg>
<status status="PASS" starttime="20240808 15:03:51.743" endtime="20240808 15:03:51.766"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:03:51.809" level="INFO">${CP} = 9.074234174314388</msg>
<status status="PASS" starttime="20240808 15:03:51.766" endtime="20240808 15:03:51.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:03:51.810" endtime="20240808 15:03:51.810"/>
</kw>
<status status="PASS" starttime="20240808 15:03:51.809" endtime="20240808 15:03:51.810"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:51.810" endtime="20240808 15:03:51.810"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:51.810" endtime="20240808 15:03:51.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:51.811" endtime="20240808 15:03:51.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:51.811" endtime="20240808 15:03:51.811"/>
</kw>
<status status="PASS" starttime="20240808 15:03:51.743" endtime="20240808 15:03:51.811"/>
</kw>
<status status="PASS" starttime="20240808 15:03:50.601" endtime="20240808 15:03:51.811"/>
</kw>
<kw name="Close State Car Requiring Power" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the CP car power request is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_6}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:03:51.812" endtime="20240808 15:03:51.817"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:03:51.893" level="INFO">${data} = [0;32mI (01:03:01.333) CHARGER: State 2: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:51.817" endtime="20240808 15:03:51.893"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:53.894" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:03:51.893" endtime="20240808 15:03:53.894"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:03:53.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:03:53.894" endtime="20240808 15:03:53.894"/>
</kw>
<msg timestamp="20240808 15:03:53.894" level="INFO">${data} = [0;32mI (01:03:01.333) CHARGER: State 2: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:51.812" endtime="20240808 15:03:53.894"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_ch_PWR}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:03:53.918" level="INFO">${PP} = 6.902022535378767</msg>
<status status="PASS" starttime="20240808 15:03:53.895" endtime="20240808 15:03:53.918"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:03:53.981" level="INFO">${CP} = 8.77396103758352</msg>
<status status="PASS" starttime="20240808 15:03:53.918" endtime="20240808 15:03:53.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:53.981" level="INFO">6.902022535378767</msg>
<status status="PASS" starttime="20240808 15:03:53.981" endtime="20240808 15:03:53.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:53.981" level="INFO">8.77396103758352</msg>
<status status="PASS" starttime="20240808 15:03:53.981" endtime="20240808 15:03:53.981"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:54.981" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:03:53.981" endtime="20240808 15:03:54.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:03:54.981" endtime="20240808 15:03:54.982"/>
</kw>
<status status="PASS" starttime="20240808 15:03:54.981" endtime="20240808 15:03:54.982"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:54.982" endtime="20240808 15:03:54.982"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:03:54.982" endtime="20240808 15:03:54.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:54.983" level="INFO">[0;32mI (01:03:01.333) CHARGER: State 2: CH_STATE_CH_PWR[0m</msg>
<status status="PASS" starttime="20240808 15:03:54.983" endtime="20240808 15:03:54.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:54.983" endtime="20240808 15:03:54.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:03:54.983" endtime="20240808 15:03:54.983"/>
</kw>
<status status="PASS" starttime="20240808 15:03:53.895" endtime="20240808 15:03:54.983"/>
</kw>
<status status="PASS" starttime="20240808 15:03:51.812" endtime="20240808 15:03:54.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>message=Waiting for Car_Conn</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:54.984" level="INFO">Waiting for Car_Conn</msg>
<status status="PASS" starttime="20240808 15:03:54.984" endtime="20240808 15:03:54.984"/>
</kw>
<kw name="Close State CH PWR" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if charging cloud is true.</doc>
<kw name="Collect State 15 sec" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<arg>${state_car_con}</arg>
<msg timestamp="20240808 15:03:57.893" level="INFO">${data} = [0;32mI (01:03:07.334) CHARGER: State 1: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:03:54.985" endtime="20240808 15:03:57.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:57.893" level="INFO">[0;32mI (01:03:07.334) CHARGER: State 1: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:03:57.893" endtime="20240808 15:03:57.893"/>
</kw>
<status status="PASS" starttime="20240808 15:03:54.985" endtime="20240808 15:03:57.893"/>
</kw>
<kw name="Close State CH PWR" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if charging cloud is true.</doc>
<kw name="Collect State 15 sec" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<arg>${state_car_con}</arg>
<msg timestamp="20240808 15:03:57.925" level="INFO">${data} = [0;32mI (01:03:07.368) CHARGER: State 2: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:03:57.894" endtime="20240808 15:03:57.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:03:57.925" level="INFO">[0;32mI (01:03:07.368) CHARGER: State 2: CH_STATE_CAR_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:03:57.925" endtime="20240808 15:03:57.925"/>
</kw>
<status status="PASS" starttime="20240808 15:03:57.894" endtime="20240808 15:03:57.925"/>
</kw>
<kw name="Close State Car Connected" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the CP car connection is closed properly.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:03:58.927" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:03:57.926" endtime="20240808 15:03:58.927"/>
</kw>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_1}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:03:58.928" endtime="20240808 15:03:58.933"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:03:59.013" level="INFO">${data} = [0;32mI (01:03:08.454) CHARGER: State 1: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:03:58.933" endtime="20240808 15:03:59.013"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:04:00.013" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:03:59.013" endtime="20240808 15:04:00.013"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:04:00.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:04:00.014" endtime="20240808 15:04:00.014"/>
</kw>
<msg timestamp="20240808 15:04:00.014" level="INFO">${data} = [0;32mI (01:03:08.454) CHARGER: State 1: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:03:58.927" endtime="20240808 15:04:00.014"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_cable_con}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:04:00.039" level="INFO">${PP} = 6.687824403467841</msg>
<status status="PASS" starttime="20240808 15:04:00.015" endtime="20240808 15:04:00.039"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:04:00.060" level="INFO">${CP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:00.039" endtime="20240808 15:04:00.060"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:04:00.061" endtime="20240808 15:04:00.062"/>
</kw>
<status status="PASS" starttime="20240808 15:04:00.061" endtime="20240808 15:04:00.062"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:00.062" endtime="20240808 15:04:00.062"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:00.062" endtime="20240808 15:04:00.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:00.062" endtime="20240808 15:04:00.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:00.063" endtime="20240808 15:04:00.063"/>
</kw>
<status status="PASS" starttime="20240808 15:04:00.014" endtime="20240808 15:04:00.063"/>
</kw>
<status status="PASS" starttime="20240808 15:03:57.925" endtime="20240808 15:04:00.063"/>
</kw>
<kw name="Close State Car Connected" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the CP car connection is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_5}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:04:00.064" endtime="20240808 15:04:00.068"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:04:00.181" level="INFO">${data} = [0;32mI (01:03:09.628) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:04:00.068" endtime="20240808 15:04:00.182"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:04:02.182" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:04:00.182" endtime="20240808 15:04:02.182"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:04:02.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:04:02.182" endtime="20240808 15:04:02.182"/>
</kw>
<msg timestamp="20240808 15:04:02.182" level="INFO">${data} = [0;32mI (01:03:09.628) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:04:00.063" endtime="20240808 15:04:02.182"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_cable_con}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:04:02.205" level="INFO">${PP} = 6.902351060199001</msg>
<status status="PASS" starttime="20240808 15:04:02.183" endtime="20240808 15:04:02.205"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:04:02.226" level="INFO">${CP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:02.205" endtime="20240808 15:04:02.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:04:02.227" level="INFO">6.902351060199001</msg>
<status status="PASS" starttime="20240808 15:04:02.227" endtime="20240808 15:04:02.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:04:02.229" level="INFO">10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:02.227" endtime="20240808 15:04:02.229"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:04:03.229" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:04:02.229" endtime="20240808 15:04:03.229"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:04:03.229" endtime="20240808 15:04:03.230"/>
</kw>
<status status="PASS" starttime="20240808 15:04:03.229" endtime="20240808 15:04:03.230"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:03.230" endtime="20240808 15:04:03.231"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:03.231" endtime="20240808 15:04:03.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:04:03.231" level="INFO">[0;32mI (01:03:09.628) CHARGER: State 2: CH_STATE_CABLE_CONN[0m</msg>
<status status="PASS" starttime="20240808 15:04:03.231" endtime="20240808 15:04:03.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:03.231" endtime="20240808 15:04:03.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:03.232" endtime="20240808 15:04:03.232"/>
</kw>
<status status="PASS" starttime="20240808 15:04:02.182" endtime="20240808 15:04:03.232"/>
</kw>
<status status="PASS" starttime="20240808 15:04:00.063" endtime="20240808 15:04:03.232"/>
</kw>
<kw name="Close State Cable Connected" library="State_Cycle_Test_Port_1">
<arg>${ser}</arg>
<doc>This test case checks if the PP cable connection is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_1">
<var>${data}</var>
<arg>${relay_0}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:04:03.234" endtime="20240808 15:04:03.239"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:04:03.285" level="INFO">${data} = [0;32mI (01:03:12.730) CHARGER: State 1: CH_STATE_IDLE[0m</msg>
<status status="PASS" starttime="20240808 15:04:03.240" endtime="20240808 15:04:03.285"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:04:04.286" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:04:03.285" endtime="20240808 15:04:04.286"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:04:04.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:04:04.287" endtime="20240808 15:04:04.287"/>
</kw>
<msg timestamp="20240808 15:04:04.287" level="INFO">${data} = [0;32mI (01:03:12.730) CHARGER: State 1: CH_STATE_IDLE[0m</msg>
<status status="PASS" starttime="20240808 15:04:03.233" endtime="20240808 15:04:04.287"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_1">
<arg>${data}</arg>
<arg>${state_idle}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel}</arg>
<msg timestamp="20240808 15:04:04.311" level="INFO">${PP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:04.288" endtime="20240808 15:04:04.311"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel}</arg>
<msg timestamp="20240808 15:04:04.333" level="INFO">${CP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:04.311" endtime="20240808 15:04:04.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:04:04.334" endtime="20240808 15:04:04.334"/>
</kw>
<status status="PASS" starttime="20240808 15:04:04.333" endtime="20240808 15:04:04.334"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:04.334" endtime="20240808 15:04:04.334"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:04.334" endtime="20240808 15:04:04.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_1}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:04.335" endtime="20240808 15:04:04.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:04.335" endtime="20240808 15:04:04.336"/>
</kw>
<status status="PASS" starttime="20240808 15:04:04.287" endtime="20240808 15:04:04.336"/>
</kw>
<status status="PASS" starttime="20240808 15:04:03.233" endtime="20240808 15:04:04.336"/>
</kw>
<kw name="Close State Cable Connected" library="State_Cycle_Test_Port_2">
<arg>${ser}</arg>
<doc>This test case checks if the PP cable connection is closed properly.</doc>
<kw name="Simulate Cable Disconnect" library="State_Cycle_Test_Port_2">
<var>${data}</var>
<arg>${relay_4}</arg>
<arg>${ser}</arg>
<kw name="Close Relay" library="main">
<arg>${relay}</arg>
<status status="PASS" starttime="20240808 15:04:04.338" endtime="20240808 15:04:04.341"/>
</kw>
<kw name="Collect State" library="main">
<var>${data}</var>
<arg>${ser}</arg>
<msg timestamp="20240808 15:04:04.389" level="INFO">${data} = [0;32mI (01:03:13.831) CHARGER: State 2: CH_STATE_IDLE[0m</msg>
<status status="PASS" starttime="20240808 15:04:04.341" endtime="20240808 15:04:04.389"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:04:06.389" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240808 15:04:04.389" endtime="20240808 15:04:06.389"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${data}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20240808 15:04:06.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240808 15:04:06.389" endtime="20240808 15:04:06.389"/>
</kw>
<msg timestamp="20240808 15:04:06.390" level="INFO">${data} = [0;32mI (01:03:13.831) CHARGER: State 2: CH_STATE_IDLE[0m</msg>
<status status="PASS" starttime="20240808 15:04:04.336" endtime="20240808 15:04:06.390"/>
</kw>
<kw name="Check State And CP/PP Value" library="State_Cycle_Test_Port_2">
<arg>${data}</arg>
<arg>${state_idle}</arg>
<kw name="Get CP/PP Value" library="main">
<var>${PP}</var>
<arg>${PP_channel_port_2}</arg>
<msg timestamp="20240808 15:04:06.413" level="INFO">${PP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:06.390" endtime="20240808 15:04:06.413"/>
</kw>
<kw name="Get CP/PP Value" library="main">
<var>${CP}</var>
<arg>${CP_channel_port_2}</arg>
<msg timestamp="20240808 15:04:06.435" level="INFO">${CP} = 10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:06.413" endtime="20240808 15:04:06.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${PP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:04:06.435" level="INFO">10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:06.435" endtime="20240808 15:04:06.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${CP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:04:06.436" level="INFO">10.837111709515394</msg>
<status status="PASS" starttime="20240808 15:04:06.435" endtime="20240808 15:04:06.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240808 15:04:07.436" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240808 15:04:06.436" endtime="20240808 15:04:07.436"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${state}' in ${data}"</arg>
<arg>Run Keywords</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" starttime="20240808 15:04:07.436" endtime="20240808 15:04:07.436"/>
</kw>
<status status="PASS" starttime="20240808 15:04:07.436" endtime="20240808 15:04:07.438"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PP} &gt;= ${PP_min[${state}]} and ${PP} &lt;= ${PP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:07.438" endtime="20240808 15:04:07.438"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CP} &gt;= ${CP_min[${state}]} and ${CP} &lt;= ${CP_max[${state}]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240808 15:04:07.438" endtime="20240808 15:04:07.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240808 15:04:07.439" level="INFO">[0;32mI (01:03:13.831) CHARGER: State 2: CH_STATE_IDLE[0m</msg>
<status status="PASS" starttime="20240808 15:04:07.439" endtime="20240808 15:04:07.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${connector_2}</arg>
<arg>msg=Connector Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:07.439" endtime="20240808 15:04:07.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${data}</arg>
<arg>${state}</arg>
<arg>msg=State Error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240808 15:04:07.439" endtime="20240808 15:04:07.439"/>
</kw>
<status status="PASS" starttime="20240808 15:04:06.390" endtime="20240808 15:04:07.439"/>
</kw>
<status status="PASS" starttime="20240808 15:04:04.336" endtime="20240808 15:04:07.439"/>
</kw>
<doc>Validates states from charging to idle on Connector 1.</doc>
<status status="PASS" starttime="20240808 15:03:46.235" endtime="20240808 15:04:07.440"/>
</test>
<test id="s1-t5" name="Stop Charging Cycle Port 2" line="74">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${PREV_TEST_STATUS}' != 'PASS'</arg>
<arg>Fail</arg>
<arg>Previous test case failed.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240808 15:04:07.443" endtime="20240808 15:04:07.443"/>
</kw>
<doc>Validates states from charging to idle on Connector 2.</doc>
<status status="PASS" starttime="20240808 15:04:07.442" endtime="20240808 15:04:07.443"/>
</test>
<kw name="Close Serial" library="main" type="TEARDOWN">
<arg>${ser}</arg>
<status status="PASS" starttime="20240808 15:04:07.445" endtime="20240808 15:04:07.572"/>
</kw>
<doc>Tests full charging cycle on connector 2 from cable plugin to charging state. LED functionality, CP/PP values, states and voltage throughput are verified.

MAC-Address: 348518A1DC84 

Software Version: NISO_v0.15</doc>
<status status="PASS" starttime="20240808 15:01:05.579" endtime="20240808 15:04:07.572"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Charging Sequence No Cloud Both Ports">Charging Sequence No Cloud Both Ports</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
